.include "macros.inc"
.file "AXAlloc.c"

# 0x801B7D04 - 0x801B81CC
.text
.balign 4

.fn __AXGetStackHead, global
/* 801B7D04 001B4DE4  3C 80 80 36 */	lis r4, __AXStackHead@ha
/* 801B7D08 001B4DE8  54 63 10 3A */	slwi r3, r3, 2
/* 801B7D0C 001B4DEC  38 04 3D 88 */	addi r0, r4, __AXStackHead@l
/* 801B7D10 001B4DF0  7C 60 1A 14 */	add r3, r0, r3
/* 801B7D14 001B4DF4  80 63 00 00 */	lwz r3, 0x0(r3)
/* 801B7D18 001B4DF8  4E 80 00 20 */	blr
.endfn __AXGetStackHead

.fn __AXServiceCallbackStack, global
/* 801B7D1C 001B4DFC  7C 08 02 A6 */	mflr r0
/* 801B7D20 001B4E00  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7D24 001B4E04  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B7D28 001B4E08  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B7D2C 001B4E0C  48 00 01 FD */	bl __AXPopCallbackStack
/* 801B7D30 001B4E10  7C 7F 1B 78 */	mr r31, r3
/* 801B7D34 001B4E14  48 00 00 40 */	b .L_801B7D74
.L_801B7D38:
/* 801B7D38 001B4E18  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 801B7D3C 001B4E1C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B7D40 001B4E20  41 82 00 2C */	beq .L_801B7D6C
/* 801B7D44 001B4E24  81 9F 00 10 */	lwz r12, 0x10(r31)
/* 801B7D48 001B4E28  28 0C 00 00 */	cmplwi r12, 0x0
/* 801B7D4C 001B4E2C  41 82 00 10 */	beq .L_801B7D5C
/* 801B7D50 001B4E30  7D 88 03 A6 */	mtlr r12
/* 801B7D54 001B4E34  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B7D58 001B4E38  4E 80 00 21 */	blrl
.L_801B7D5C:
/* 801B7D5C 001B4E3C  7F E3 FB 78 */	mr r3, r31
/* 801B7D60 001B4E40  48 00 01 E5 */	bl __AXRemoveFromStack
/* 801B7D64 001B4E44  7F E3 FB 78 */	mr r3, r31
/* 801B7D68 001B4E48  48 00 01 91 */	bl __AXPushFreeStack
.L_801B7D6C:
/* 801B7D6C 001B4E4C  48 00 01 BD */	bl __AXPopCallbackStack
/* 801B7D70 001B4E50  7C 7F 1B 78 */	mr r31, r3
.L_801B7D74:
/* 801B7D74 001B4E54  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B7D78 001B4E58  40 82 FF C0 */	bne .L_801B7D38
/* 801B7D7C 001B4E5C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B7D80 001B4E60  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B7D84 001B4E64  38 21 00 10 */	addi r1, r1, 0x10
/* 801B7D88 001B4E68  7C 08 03 A6 */	mtlr r0
/* 801B7D8C 001B4E6C  4E 80 00 20 */	blr
.endfn __AXServiceCallbackStack

.fn __AXAllocInit, global
/* 801B7D90 001B4E70  38 00 00 00 */	li r0, 0x0
/* 801B7D94 001B4E74  90 0D 99 B0 */	stw r0, __AXCallbackStack@sda21(r13)
/* 801B7D98 001B4E78  38 00 00 02 */	li r0, 0x2
/* 801B7D9C 001B4E7C  3C 80 80 36 */	lis r4, __AXStackTail@ha
/* 801B7DA0 001B4E80  7C 09 03 A6 */	mtctr r0
/* 801B7DA4 001B4E84  3C 60 80 36 */	lis r3, __AXStackHead@ha
/* 801B7DA8 001B4E88  38 84 3E 08 */	addi r4, r4, __AXStackTail@l
/* 801B7DAC 001B4E8C  38 63 3D 88 */	addi r3, r3, __AXStackHead@l
.L_801B7DB0:
/* 801B7DB0 001B4E90  38 00 00 00 */	li r0, 0x0
/* 801B7DB4 001B4E94  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B7DB8 001B4E98  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B7DBC 001B4E9C  90 04 00 04 */	stw r0, 0x4(r4)
/* 801B7DC0 001B4EA0  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B7DC4 001B4EA4  90 04 00 08 */	stw r0, 0x8(r4)
/* 801B7DC8 001B4EA8  90 03 00 08 */	stw r0, 0x8(r3)
/* 801B7DCC 001B4EAC  90 04 00 0C */	stw r0, 0xc(r4)
/* 801B7DD0 001B4EB0  90 03 00 0C */	stw r0, 0xc(r3)
/* 801B7DD4 001B4EB4  90 04 00 10 */	stw r0, 0x10(r4)
/* 801B7DD8 001B4EB8  90 03 00 10 */	stw r0, 0x10(r3)
/* 801B7DDC 001B4EBC  90 04 00 14 */	stw r0, 0x14(r4)
/* 801B7DE0 001B4EC0  90 03 00 14 */	stw r0, 0x14(r3)
/* 801B7DE4 001B4EC4  90 04 00 18 */	stw r0, 0x18(r4)
/* 801B7DE8 001B4EC8  90 03 00 18 */	stw r0, 0x18(r3)
/* 801B7DEC 001B4ECC  90 04 00 1C */	stw r0, 0x1c(r4)
/* 801B7DF0 001B4ED0  90 03 00 1C */	stw r0, 0x1c(r3)
/* 801B7DF4 001B4ED4  90 04 00 20 */	stw r0, 0x20(r4)
/* 801B7DF8 001B4ED8  90 03 00 20 */	stw r0, 0x20(r3)
/* 801B7DFC 001B4EDC  90 04 00 24 */	stw r0, 0x24(r4)
/* 801B7E00 001B4EE0  90 03 00 24 */	stw r0, 0x24(r3)
/* 801B7E04 001B4EE4  90 04 00 28 */	stw r0, 0x28(r4)
/* 801B7E08 001B4EE8  90 03 00 28 */	stw r0, 0x28(r3)
/* 801B7E0C 001B4EEC  90 04 00 2C */	stw r0, 0x2c(r4)
/* 801B7E10 001B4EF0  90 03 00 2C */	stw r0, 0x2c(r3)
/* 801B7E14 001B4EF4  90 04 00 30 */	stw r0, 0x30(r4)
/* 801B7E18 001B4EF8  90 03 00 30 */	stw r0, 0x30(r3)
/* 801B7E1C 001B4EFC  90 04 00 34 */	stw r0, 0x34(r4)
/* 801B7E20 001B4F00  90 03 00 34 */	stw r0, 0x34(r3)
/* 801B7E24 001B4F04  90 04 00 38 */	stw r0, 0x38(r4)
/* 801B7E28 001B4F08  90 03 00 38 */	stw r0, 0x38(r3)
/* 801B7E2C 001B4F0C  90 04 00 3C */	stw r0, 0x3c(r4)
/* 801B7E30 001B4F10  38 84 00 40 */	addi r4, r4, 0x40
/* 801B7E34 001B4F14  90 03 00 3C */	stw r0, 0x3c(r3)
/* 801B7E38 001B4F18  38 63 00 40 */	addi r3, r3, 0x40
/* 801B7E3C 001B4F1C  42 00 FF 74 */	bdnz .L_801B7DB0
/* 801B7E40 001B4F20  4E 80 00 20 */	blr
.endfn __AXAllocInit

.fn __AXAllocQuit, global
/* 801B7E44 001B4F24  38 00 00 00 */	li r0, 0x0
/* 801B7E48 001B4F28  90 0D 99 B0 */	stw r0, __AXCallbackStack@sda21(r13)
/* 801B7E4C 001B4F2C  38 00 00 02 */	li r0, 0x2
/* 801B7E50 001B4F30  3C 80 80 36 */	lis r4, __AXStackTail@ha
/* 801B7E54 001B4F34  7C 09 03 A6 */	mtctr r0
/* 801B7E58 001B4F38  3C 60 80 36 */	lis r3, __AXStackHead@ha
/* 801B7E5C 001B4F3C  38 84 3E 08 */	addi r4, r4, __AXStackTail@l
/* 801B7E60 001B4F40  38 63 3D 88 */	addi r3, r3, __AXStackHead@l
.L_801B7E64:
/* 801B7E64 001B4F44  38 00 00 00 */	li r0, 0x0
/* 801B7E68 001B4F48  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B7E6C 001B4F4C  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B7E70 001B4F50  90 04 00 04 */	stw r0, 0x4(r4)
/* 801B7E74 001B4F54  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B7E78 001B4F58  90 04 00 08 */	stw r0, 0x8(r4)
/* 801B7E7C 001B4F5C  90 03 00 08 */	stw r0, 0x8(r3)
/* 801B7E80 001B4F60  90 04 00 0C */	stw r0, 0xc(r4)
/* 801B7E84 001B4F64  90 03 00 0C */	stw r0, 0xc(r3)
/* 801B7E88 001B4F68  90 04 00 10 */	stw r0, 0x10(r4)
/* 801B7E8C 001B4F6C  90 03 00 10 */	stw r0, 0x10(r3)
/* 801B7E90 001B4F70  90 04 00 14 */	stw r0, 0x14(r4)
/* 801B7E94 001B4F74  90 03 00 14 */	stw r0, 0x14(r3)
/* 801B7E98 001B4F78  90 04 00 18 */	stw r0, 0x18(r4)
/* 801B7E9C 001B4F7C  90 03 00 18 */	stw r0, 0x18(r3)
/* 801B7EA0 001B4F80  90 04 00 1C */	stw r0, 0x1c(r4)
/* 801B7EA4 001B4F84  90 03 00 1C */	stw r0, 0x1c(r3)
/* 801B7EA8 001B4F88  90 04 00 20 */	stw r0, 0x20(r4)
/* 801B7EAC 001B4F8C  90 03 00 20 */	stw r0, 0x20(r3)
/* 801B7EB0 001B4F90  90 04 00 24 */	stw r0, 0x24(r4)
/* 801B7EB4 001B4F94  90 03 00 24 */	stw r0, 0x24(r3)
/* 801B7EB8 001B4F98  90 04 00 28 */	stw r0, 0x28(r4)
/* 801B7EBC 001B4F9C  90 03 00 28 */	stw r0, 0x28(r3)
/* 801B7EC0 001B4FA0  90 04 00 2C */	stw r0, 0x2c(r4)
/* 801B7EC4 001B4FA4  90 03 00 2C */	stw r0, 0x2c(r3)
/* 801B7EC8 001B4FA8  90 04 00 30 */	stw r0, 0x30(r4)
/* 801B7ECC 001B4FAC  90 03 00 30 */	stw r0, 0x30(r3)
/* 801B7ED0 001B4FB0  90 04 00 34 */	stw r0, 0x34(r4)
/* 801B7ED4 001B4FB4  90 03 00 34 */	stw r0, 0x34(r3)
/* 801B7ED8 001B4FB8  90 04 00 38 */	stw r0, 0x38(r4)
/* 801B7EDC 001B4FBC  90 03 00 38 */	stw r0, 0x38(r3)
/* 801B7EE0 001B4FC0  90 04 00 3C */	stw r0, 0x3c(r4)
/* 801B7EE4 001B4FC4  38 84 00 40 */	addi r4, r4, 0x40
/* 801B7EE8 001B4FC8  90 03 00 3C */	stw r0, 0x3c(r3)
/* 801B7EEC 001B4FCC  38 63 00 40 */	addi r3, r3, 0x40
/* 801B7EF0 001B4FD0  42 00 FF 74 */	bdnz .L_801B7E64
/* 801B7EF4 001B4FD4  4E 80 00 20 */	blr
.endfn __AXAllocQuit

.fn __AXPushFreeStack, global
/* 801B7EF8 001B4FD8  3C 80 80 36 */	lis r4, __AXStackHead@ha
/* 801B7EFC 001B4FDC  38 A4 3D 88 */	addi r5, r4, __AXStackHead@l
/* 801B7F00 001B4FE0  80 85 00 00 */	lwz r4, 0x0(r5)
/* 801B7F04 001B4FE4  38 00 00 00 */	li r0, 0x0
/* 801B7F08 001B4FE8  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B7F0C 001B4FEC  90 65 00 00 */	stw r3, 0x0(r5)
/* 801B7F10 001B4FF0  90 03 00 0C */	stw r0, 0xc(r3)
/* 801B7F14 001B4FF4  4E 80 00 20 */	blr
.endfn __AXPushFreeStack

.fn __AXPushCallbackStack, global
/* 801B7F18 001B4FF8  80 0D 99 B0 */	lwz r0, __AXCallbackStack@sda21(r13)
/* 801B7F1C 001B4FFC  90 03 00 08 */	stw r0, 0x8(r3)
/* 801B7F20 001B5000  90 6D 99 B0 */	stw r3, __AXCallbackStack@sda21(r13)
/* 801B7F24 001B5004  4E 80 00 20 */	blr
.endfn __AXPushCallbackStack

.fn __AXPopCallbackStack, global
/* 801B7F28 001B5008  80 0D 99 B0 */	lwz r0, __AXCallbackStack@sda21(r13)
/* 801B7F2C 001B500C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B7F30 001B5010  7C 03 03 78 */	mr r3, r0
/* 801B7F34 001B5014  4D 82 00 20 */	beqlr
/* 801B7F38 001B5018  80 03 00 08 */	lwz r0, 0x8(r3)
/* 801B7F3C 001B501C  90 0D 99 B0 */	stw r0, __AXCallbackStack@sda21(r13)
/* 801B7F40 001B5020  4E 80 00 20 */	blr
.endfn __AXPopCallbackStack

.fn __AXRemoveFromStack, global
/* 801B7F44 001B5024  80 03 00 0C */	lwz r0, 0xc(r3)
/* 801B7F48 001B5028  3C A0 80 36 */	lis r5, __AXStackHead@ha
/* 801B7F4C 001B502C  3C 80 80 36 */	lis r4, __AXStackTail@ha
/* 801B7F50 001B5030  54 06 10 3A */	slwi r6, r0, 2
/* 801B7F54 001B5034  38 A5 3D 88 */	addi r5, r5, __AXStackHead@l
/* 801B7F58 001B5038  38 04 3E 08 */	addi r0, r4, __AXStackTail@l
/* 801B7F5C 001B503C  7C E5 32 14 */	add r7, r5, r6
/* 801B7F60 001B5040  7C A0 32 14 */	add r5, r0, r6
/* 801B7F64 001B5044  80 87 00 00 */	lwz r4, 0x0(r7)
/* 801B7F68 001B5048  80 05 00 00 */	lwz r0, 0x0(r5)
/* 801B7F6C 001B504C  7C 04 00 40 */	cmplw r4, r0
/* 801B7F70 001B5050  40 82 00 14 */	bne .L_801B7F84
/* 801B7F74 001B5054  38 00 00 00 */	li r0, 0x0
/* 801B7F78 001B5058  90 05 00 00 */	stw r0, 0x0(r5)
/* 801B7F7C 001B505C  90 07 00 00 */	stw r0, 0x0(r7)
/* 801B7F80 001B5060  4E 80 00 20 */	blr
.L_801B7F84:
/* 801B7F84 001B5064  7C 03 20 40 */	cmplw r3, r4
/* 801B7F88 001B5068  40 82 00 1C */	bne .L_801B7FA4
/* 801B7F8C 001B506C  80 63 00 00 */	lwz r3, 0x0(r3)
/* 801B7F90 001B5070  38 00 00 00 */	li r0, 0x0
/* 801B7F94 001B5074  90 67 00 00 */	stw r3, 0x0(r7)
/* 801B7F98 001B5078  80 67 00 00 */	lwz r3, 0x0(r7)
/* 801B7F9C 001B507C  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B7FA0 001B5080  4E 80 00 20 */	blr
.L_801B7FA4:
/* 801B7FA4 001B5084  7C 03 00 40 */	cmplw r3, r0
/* 801B7FA8 001B5088  40 82 00 1C */	bne .L_801B7FC4
/* 801B7FAC 001B508C  80 63 00 04 */	lwz r3, 0x4(r3)
/* 801B7FB0 001B5090  38 00 00 00 */	li r0, 0x0
/* 801B7FB4 001B5094  90 65 00 00 */	stw r3, 0x0(r5)
/* 801B7FB8 001B5098  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B7FBC 001B509C  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B7FC0 001B50A0  4E 80 00 20 */	blr
.L_801B7FC4:
/* 801B7FC4 001B50A4  80 83 00 04 */	lwz r4, 0x4(r3)
/* 801B7FC8 001B50A8  80 63 00 00 */	lwz r3, 0x0(r3)
/* 801B7FCC 001B50AC  90 64 00 00 */	stw r3, 0x0(r4)
/* 801B7FD0 001B50B0  90 83 00 04 */	stw r4, 0x4(r3)
/* 801B7FD4 001B50B4  4E 80 00 20 */	blr
.endfn __AXRemoveFromStack

.fn AXFreeVoice, global
/* 801B7FD8 001B50B8  7C 08 02 A6 */	mflr r0
/* 801B7FDC 001B50BC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7FE0 001B50C0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B7FE4 001B50C4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B7FE8 001B50C8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B7FEC 001B50CC  7C 7E 1B 78 */	mr r30, r3
/* 801B7FF0 001B50D0  48 01 C3 21 */	bl OSDisableInterrupts
/* 801B7FF4 001B50D4  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B7FF8 001B50D8  38 7E 00 00 */	addi r3, r30, 0x0
/* 801B7FFC 001B50DC  4B FF FF 49 */	bl __AXRemoveFromStack
/* 801B8000 001B50E0  A0 1E 01 46 */	lhz r0, 0x146(r30)
/* 801B8004 001B50E4  28 00 00 01 */	cmplwi r0, 0x1
/* 801B8008 001B50E8  40 82 00 0C */	bne .L_801B8014
/* 801B800C 001B50EC  38 00 00 01 */	li r0, 0x1
/* 801B8010 001B50F0  90 1E 00 20 */	stw r0, 0x20(r30)
.L_801B8014:
/* 801B8014 001B50F4  7F C3 F3 78 */	mr r3, r30
/* 801B8018 001B50F8  48 00 23 C9 */	bl __AXSetPBDefault
/* 801B801C 001B50FC  3C 60 80 36 */	lis r3, __AXStackHead@ha
/* 801B8020 001B5100  38 A3 3D 88 */	addi r5, r3, __AXStackHead@l
/* 801B8024 001B5104  80 85 00 00 */	lwz r4, 0x0(r5)
/* 801B8028 001B5108  38 00 00 00 */	li r0, 0x0
/* 801B802C 001B510C  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B8030 001B5110  90 9E 00 00 */	stw r4, 0x0(r30)
/* 801B8034 001B5114  93 C5 00 00 */	stw r30, 0x0(r5)
/* 801B8038 001B5118  90 1E 00 0C */	stw r0, 0xc(r30)
/* 801B803C 001B511C  48 01 C2 FD */	bl OSRestoreInterrupts
/* 801B8040 001B5120  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B8044 001B5124  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B8048 001B5128  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B804C 001B512C  38 21 00 18 */	addi r1, r1, 0x18
/* 801B8050 001B5130  7C 08 03 A6 */	mtlr r0
/* 801B8054 001B5134  4E 80 00 20 */	blr
.endfn AXFreeVoice

.fn AXAcquireVoice, global
/* 801B8058 001B5138  7C 08 02 A6 */	mflr r0
/* 801B805C 001B513C  3C C0 80 36 */	lis r6, ...bss.0@ha
/* 801B8060 001B5140  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B8064 001B5144  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 801B8068 001B5148  BF 41 00 20 */	stmw r26, 0x20(r1)
/* 801B806C 001B514C  3B 83 00 00 */	addi r28, r3, 0x0
/* 801B8070 001B5150  3B A4 00 00 */	addi r29, r4, 0x0
/* 801B8074 001B5154  3B C5 00 00 */	addi r30, r5, 0x0
/* 801B8078 001B5158  3B 66 3D 88 */	addi r27, r6, ...bss.0@l
/* 801B807C 001B515C  48 01 C2 95 */	bl OSDisableInterrupts
/* 801B8080 001B5160  80 9B 00 00 */	lwz r4, 0x0(r27)
/* 801B8084 001B5164  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B8088 001B5168  28 04 00 00 */	cmplwi r4, 0x0
/* 801B808C 001B516C  41 82 00 0C */	beq .L_801B8098
/* 801B8090 001B5170  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801B8094 001B5174  90 1B 00 00 */	stw r0, 0x0(r27)
.L_801B8098:
/* 801B8098 001B5178  28 04 00 00 */	cmplwi r4, 0x0
/* 801B809C 001B517C  3B 44 00 00 */	addi r26, r4, 0x0
/* 801B80A0 001B5180  40 82 00 B4 */	bne .L_801B8154
/* 801B80A4 001B5184  38 1C FF FF */	addi r0, r28, -0x1
/* 801B80A8 001B5188  28 1C 00 01 */	cmplwi r28, 0x1
/* 801B80AC 001B518C  7C 09 03 A6 */	mtctr r0
/* 801B80B0 001B5190  38 BB 00 04 */	addi r5, r27, 0x4
/* 801B80B4 001B5194  38 DB 00 84 */	addi r6, r27, 0x84
/* 801B80B8 001B5198  40 81 00 9C */	ble .L_801B8154
.L_801B80BC:
/* 801B80BC 001B519C  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B80C0 001B51A0  38 80 00 00 */	li r4, 0x0
/* 801B80C4 001B51A4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B80C8 001B51A8  41 82 00 44 */	beq .L_801B810C
/* 801B80CC 001B51AC  80 E6 00 00 */	lwz r7, 0x0(r6)
/* 801B80D0 001B51B0  7C 03 38 40 */	cmplw r3, r7
/* 801B80D4 001B51B4  40 82 00 18 */	bne .L_801B80EC
/* 801B80D8 001B51B8  38 00 00 00 */	li r0, 0x0
/* 801B80DC 001B51BC  90 06 00 00 */	stw r0, 0x0(r6)
/* 801B80E0 001B51C0  7C 64 1B 78 */	mr r4, r3
/* 801B80E4 001B51C4  90 05 00 00 */	stw r0, 0x0(r5)
/* 801B80E8 001B51C8  48 00 00 24 */	b .L_801B810C
.L_801B80EC:
/* 801B80EC 001B51CC  28 07 00 00 */	cmplwi r7, 0x0
/* 801B80F0 001B51D0  41 82 00 1C */	beq .L_801B810C
/* 801B80F4 001B51D4  80 67 00 04 */	lwz r3, 0x4(r7)
/* 801B80F8 001B51D8  38 00 00 00 */	li r0, 0x0
/* 801B80FC 001B51DC  38 87 00 00 */	addi r4, r7, 0x0
/* 801B8100 001B51E0  90 66 00 00 */	stw r3, 0x0(r6)
/* 801B8104 001B51E4  80 66 00 00 */	lwz r3, 0x0(r6)
/* 801B8108 001B51E8  90 03 00 00 */	stw r0, 0x0(r3)
.L_801B810C:
/* 801B810C 001B51EC  28 04 00 00 */	cmplwi r4, 0x0
/* 801B8110 001B51F0  3B 44 00 00 */	addi r26, r4, 0x0
/* 801B8114 001B51F4  41 82 00 34 */	beq .L_801B8148
/* 801B8118 001B51F8  A0 04 01 46 */	lhz r0, 0x146(r4)
/* 801B811C 001B51FC  28 00 00 01 */	cmplwi r0, 0x1
/* 801B8120 001B5200  40 82 00 0C */	bne .L_801B812C
/* 801B8124 001B5204  38 00 00 01 */	li r0, 0x1
/* 801B8128 001B5208  90 04 00 20 */	stw r0, 0x20(r4)
.L_801B812C:
/* 801B812C 001B520C  81 84 00 10 */	lwz r12, 0x10(r4)
/* 801B8130 001B5210  28 0C 00 00 */	cmplwi r12, 0x0
/* 801B8134 001B5214  41 82 00 20 */	beq .L_801B8154
/* 801B8138 001B5218  7D 88 03 A6 */	mtlr r12
/* 801B813C 001B521C  38 7A 00 00 */	addi r3, r26, 0x0
/* 801B8140 001B5220  4E 80 00 21 */	blrl
/* 801B8144 001B5224  48 00 00 10 */	b .L_801B8154
.L_801B8148:
/* 801B8148 001B5228  38 A5 00 04 */	addi r5, r5, 0x4
/* 801B814C 001B522C  38 C6 00 04 */	addi r6, r6, 0x4
/* 801B8150 001B5230  42 00 FF 6C */	bdnz .L_801B80BC
.L_801B8154:
/* 801B8154 001B5234  28 1A 00 00 */	cmplwi r26, 0x0
/* 801B8158 001B5238  41 82 00 54 */	beq .L_801B81AC
/* 801B815C 001B523C  57 80 10 3A */	slwi r0, r28, 2
/* 801B8160 001B5240  7C 9B 02 14 */	add r4, r27, r0
/* 801B8164 001B5244  80 64 00 00 */	lwz r3, 0x0(r4)
/* 801B8168 001B5248  38 00 00 00 */	li r0, 0x0
/* 801B816C 001B524C  90 7A 00 00 */	stw r3, 0x0(r26)
/* 801B8170 001B5250  90 1A 00 04 */	stw r0, 0x4(r26)
/* 801B8174 001B5254  80 1A 00 00 */	lwz r0, 0x0(r26)
/* 801B8178 001B5258  28 00 00 00 */	cmplwi r0, 0x0
/* 801B817C 001B525C  41 82 00 14 */	beq .L_801B8190
/* 801B8180 001B5260  80 64 00 00 */	lwz r3, 0x0(r4)
/* 801B8184 001B5264  93 43 00 04 */	stw r26, 0x4(r3)
/* 801B8188 001B5268  93 44 00 00 */	stw r26, 0x0(r4)
/* 801B818C 001B526C  48 00 00 0C */	b .L_801B8198
.L_801B8190:
/* 801B8190 001B5270  93 44 00 80 */	stw r26, 0x80(r4)
/* 801B8194 001B5274  93 44 00 00 */	stw r26, 0x0(r4)
.L_801B8198:
/* 801B8198 001B5278  93 9A 00 0C */	stw r28, 0xc(r26)
/* 801B819C 001B527C  7F 43 D3 78 */	mr r3, r26
/* 801B81A0 001B5280  93 BA 00 10 */	stw r29, 0x10(r26)
/* 801B81A4 001B5284  93 DA 00 14 */	stw r30, 0x14(r26)
/* 801B81A8 001B5288  48 00 22 39 */	bl __AXSetPBDefault
.L_801B81AC:
/* 801B81AC 001B528C  7F E3 FB 78 */	mr r3, r31
/* 801B81B0 001B5290  48 01 C1 89 */	bl OSRestoreInterrupts
/* 801B81B4 001B5294  7F 43 D3 78 */	mr r3, r26
/* 801B81B8 001B5298  BB 41 00 20 */	lmw r26, 0x20(r1)
/* 801B81BC 001B529C  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 801B81C0 001B52A0  38 21 00 38 */	addi r1, r1, 0x38
/* 801B81C4 001B52A4  7C 08 03 A6 */	mtlr r0
/* 801B81C8 001B52A8  4E 80 00 20 */	blr
.endfn AXAcquireVoice

# 0x80363D88 - 0x80363EA0
.section .bss, "wa", @nobits
.balign 8

.obj __AXStackHead, local
.sym ...bss.0, local
	.skip 0x80
.endobj __AXStackHead

.obj __AXStackTail, local
	.skip 0x80
.endobj __AXStackTail
	.skip 0x18

# 0x803CC2B0 - 0x803CC2B8
.section .sbss, "wa", @nobits
.balign 8

.obj __AXCallbackStack, local
	.skip 0x4
.endobj __AXCallbackStack
	.skip 0x4
