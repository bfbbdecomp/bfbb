.include "macros.inc"
.file "iFMV.cpp"

# 0x800C3998 - 0x800C477C
.text
.balign 4

# iFMVmalloc(unsigned long)
.fn iFMVmalloc__FUl, global
/* 800C3998 000C0A78  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C399C 000C0A7C  7C 08 02 A6 */	mflr r0
/* 800C39A0 000C0A80  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C39A4 000C0A84  80 8D 9F 7C */	lwz r4, RwEngineInstance@sda21(r13)
/* 800C39A8 000C0A88  81 84 01 34 */	lwz r12, 0x134(r4)
/* 800C39AC 000C0A8C  7D 89 03 A6 */	mtctr r12
/* 800C39B0 000C0A90  4E 80 04 21 */	bctrl
/* 800C39B4 000C0A94  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C39B8 000C0A98  7C 08 03 A6 */	mtlr r0
/* 800C39BC 000C0A9C  38 21 00 10 */	addi r1, r1, 0x10
/* 800C39C0 000C0AA0  4E 80 00 20 */	blr
.endfn iFMVmalloc__FUl

# iFMVfree(void*)
.fn iFMVfree__FPv, global
/* 800C39C4 000C0AA4  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C39C8 000C0AA8  7C 08 02 A6 */	mflr r0
/* 800C39CC 000C0AAC  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C39D0 000C0AB0  80 8D 9F 7C */	lwz r4, RwEngineInstance@sda21(r13)
/* 800C39D4 000C0AB4  81 84 01 38 */	lwz r12, 0x138(r4)
/* 800C39D8 000C0AB8  7D 89 03 A6 */	mtctr r12
/* 800C39DC 000C0ABC  4E 80 04 21 */	bctrl
/* 800C39E0 000C0AC0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C39E4 000C0AC4  7C 08 03 A6 */	mtlr r0
/* 800C39E8 000C0AC8  38 21 00 10 */	addi r1, r1, 0x10
/* 800C39EC 000C0ACC  4E 80 00 20 */	blr
.endfn iFMVfree__FPv

# iFMVPlay(char*, unsigned int, float, bool, bool)
.fn iFMVPlay__FPcUifbb, global
/* 800C39F0 000C0AD0  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C39F4 000C0AD4  7C 08 02 A6 */	mflr r0
/* 800C39F8 000C0AD8  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C39FC 000C0ADC  DB E1 00 18 */	stfd f31, 0x18(r1)
/* 800C3A00 000C0AE0  FF E0 08 90 */	fmr f31, f1
/* 800C3A04 000C0AE4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 800C3A08 000C0AE8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 800C3A0C 000C0AEC  7C 7E 1B 79 */	mr. r30, r3
/* 800C3A10 000C0AF0  40 82 00 0C */	bne .L_800C3A1C
/* 800C3A14 000C0AF4  38 60 00 01 */	li r3, 0x1
/* 800C3A18 000C0AF8  48 00 00 34 */	b .L_800C3A4C
.L_800C3A1C:
/* 800C3A1C 000C0AFC  38 00 00 00 */	li r0, 0x0
/* 800C3A20 000C0B00  7C 9F 23 78 */	mr r31, r4
/* 800C3A24 000C0B04  90 0D 91 D0 */	stw r0, frame_num@sda21(r13)
/* 800C3A28 000C0B08  48 00 00 14 */	b .L_800C3A3C
.L_800C3A2C:
/* 800C3A2C 000C0B0C  FC 20 F8 90 */	fmr f1, f31
/* 800C3A30 000C0B10  7F C3 F3 78 */	mr r3, r30
/* 800C3A34 000C0B14  7F E4 FB 78 */	mr r4, r31
/* 800C3A38 000C0B18  48 00 05 9D */	bl PlayFMV__FPcUlf
.L_800C3A3C:
/* 800C3A3C 000C0B1C  80 0D 91 D0 */	lwz r0, frame_num@sda21(r13)
/* 800C3A40 000C0B20  2C 00 00 00 */	cmpwi r0, 0x0
/* 800C3A44 000C0B24  40 80 FF E8 */	bge .L_800C3A2C
/* 800C3A48 000C0B28  38 60 00 00 */	li r3, 0x0
.L_800C3A4C:
/* 800C3A4C 000C0B2C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C3A50 000C0B30  CB E1 00 18 */	lfd f31, 0x18(r1)
/* 800C3A54 000C0B34  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 800C3A58 000C0B38  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 800C3A5C 000C0B3C  7C 08 03 A6 */	mtlr r0
/* 800C3A60 000C0B40  38 21 00 20 */	addi r1, r1, 0x20
/* 800C3A64 000C0B44  4E 80 00 20 */	blr
.endfn iFMVPlay__FPcUifbb

# Setup_surface_array()
.fn Setup_surface_array__Fv, local
/* 800C3A68 000C0B48  3C 60 80 30 */	lis r3, Bink_surface_type@ha
/* 800C3A6C 000C0B4C  38 E0 00 03 */	li r7, 0x3
/* 800C3A70 000C0B50  38 C3 BE 80 */	addi r6, r3, Bink_surface_type@l
/* 800C3A74 000C0B54  38 A0 00 05 */	li r5, 0x5
/* 800C3A78 000C0B58  38 80 00 0A */	li r4, 0xa
/* 800C3A7C 000C0B5C  38 60 00 07 */	li r3, 0x7
/* 800C3A80 000C0B60  38 00 00 0D */	li r0, 0xd
/* 800C3A84 000C0B64  90 E6 00 00 */	stw r7, 0x0(r6)
/* 800C3A88 000C0B68  90 A6 00 04 */	stw r5, 0x4(r6)
/* 800C3A8C 000C0B6C  90 86 00 08 */	stw r4, 0x8(r6)
/* 800C3A90 000C0B70  90 66 00 0C */	stw r3, 0xc(r6)
/* 800C3A94 000C0B74  90 06 00 10 */	stw r0, 0x10(r6)
/* 800C3A98 000C0B78  4E 80 00 20 */	blr
.endfn Setup_surface_array__Fv

# Decompress_frame(BINK*, RAD3DIMAGE*, long)
.fn Decompress_frame__FP4BINKP10RAD3DIMAGEl, local
/* 800C3A9C 000C0B7C  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800C3AA0 000C0B80  7C 08 02 A6 */	mflr r0
/* 800C3AA4 000C0B84  90 01 00 34 */	stw r0, 0x34(r1)
/* 800C3AA8 000C0B88  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 800C3AAC 000C0B8C  7C BF 2B 78 */	mr r31, r5
/* 800C3AB0 000C0B90  93 C1 00 28 */	stw r30, 0x28(r1)
/* 800C3AB4 000C0B94  7C 9E 23 78 */	mr r30, r4
/* 800C3AB8 000C0B98  93 A1 00 24 */	stw r29, 0x24(r1)
/* 800C3ABC 000C0B9C  7C 7D 1B 78 */	mr r29, r3
/* 800C3AC0 000C0BA0  48 0D 66 D9 */	bl BinkDoFrame
/* 800C3AC4 000C0BA4  90 61 00 0C */	stw r3, 0xc(r1)
/* 800C3AC8 000C0BA8  7F C3 F3 78 */	mr r3, r30
/* 800C3ACC 000C0BAC  38 A1 00 14 */	addi r5, r1, 0x14
/* 800C3AD0 000C0BB0  38 C1 00 10 */	addi r6, r1, 0x10
/* 800C3AD4 000C0BB4  38 8D 91 E4 */	addi r4, r13, pixels@sda21
/* 800C3AD8 000C0BB8  48 01 10 F5 */	bl Lock_RAD_3D_image
/* 800C3ADC 000C0BBC  2C 03 00 00 */	cmpwi r3, 0x0
/* 800C3AE0 000C0BC0  41 82 00 58 */	beq .L_800C3B38
/* 800C3AE4 000C0BC4  80 01 00 10 */	lwz r0, 0x10(r1)
/* 800C3AE8 000C0BC8  7C 9F 00 D0 */	neg r4, r31
/* 800C3AEC 000C0BCC  3C 60 80 30 */	lis r3, Bink_surface_type@ha
/* 800C3AF0 000C0BD0  3C A0 80 00 */	lis r5, 0x8000
/* 800C3AF4 000C0BD4  7C 86 FB 78 */	or r6, r4, r31
/* 800C3AF8 000C0BD8  54 00 10 3A */	slwi r0, r0, 2
/* 800C3AFC 000C0BDC  38 63 BE 80 */	addi r3, r3, Bink_surface_type@l
/* 800C3B00 000C0BE0  80 8D 91 E4 */	lwz r4, pixels@sda21(r13)
/* 800C3B04 000C0BE4  7C C6 FE 70 */	srawi r6, r6, 31
/* 800C3B08 000C0BE8  7C 03 00 2E */	lwzx r0, r3, r0
/* 800C3B0C 000C0BEC  7C A7 30 38 */	and r7, r5, r6
/* 800C3B10 000C0BF0  80 A1 00 14 */	lwz r5, 0x14(r1)
/* 800C3B14 000C0BF4  80 DD 00 04 */	lwz r6, 0x4(r29)
/* 800C3B18 000C0BF8  7F A3 EB 78 */	mr r3, r29
/* 800C3B1C 000C0BFC  7C 09 3B 78 */	or r9, r0, r7
/* 800C3B20 000C0C00  38 E0 00 00 */	li r7, 0x0
/* 800C3B24 000C0C04  39 00 00 00 */	li r8, 0x0
/* 800C3B28 000C0C08  48 0D 5F 49 */	bl BinkCopyToBuffer
/* 800C3B2C 000C0C0C  90 61 00 08 */	stw r3, 0x8(r1)
/* 800C3B30 000C0C10  7F C3 F3 78 */	mr r3, r30
/* 800C3B34 000C0C14  48 01 10 E9 */	bl Unlock_RAD_3D_image
.L_800C3B38:
/* 800C3B38 000C0C18  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800C3B3C 000C0C1C  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 800C3B40 000C0C20  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 800C3B44 000C0C24  83 A1 00 24 */	lwz r29, 0x24(r1)
/* 800C3B48 000C0C28  7C 08 03 A6 */	mtlr r0
/* 800C3B4C 000C0C2C  38 21 00 30 */	addi r1, r1, 0x30
/* 800C3B50 000C0C30  4E 80 00 20 */	blr
.endfn Decompress_frame__FP4BINKP10RAD3DIMAGEl

# DrawFrame(float, float, float, float)
.fn DrawFrame__Fffff, local
/* 800C3B54 000C0C34  94 21 FF 20 */	stwu r1, -0xe0(r1)
/* 800C3B58 000C0C38  7C 08 02 A6 */	mflr r0
/* 800C3B5C 000C0C3C  90 01 00 E4 */	stw r0, 0xe4(r1)
/* 800C3B60 000C0C40  DB E1 00 D0 */	stfd f31, 0xd0(r1)
/* 800C3B64 000C0C44  F3 E1 00 D8 */	psq_st f31, 0xd8(r1), 0, qr0
/* 800C3B68 000C0C48  DB C1 00 C0 */	stfd f30, 0xc0(r1)
/* 800C3B6C 000C0C4C  F3 C1 00 C8 */	psq_st f30, 0xc8(r1), 0, qr0
/* 800C3B70 000C0C50  DB A1 00 B0 */	stfd f29, 0xb0(r1)
/* 800C3B74 000C0C54  F3 A1 00 B8 */	psq_st f29, 0xb8(r1), 0, qr0
/* 800C3B78 000C0C58  DB 81 00 A0 */	stfd f28, 0xa0(r1)
/* 800C3B7C 000C0C5C  F3 81 00 A8 */	psq_st f28, 0xa8(r1), 0, qr0
/* 800C3B80 000C0C60  93 E1 00 9C */	stw r31, 0x9c(r1)
/* 800C3B84 000C0C64  83 ED A0 14 */	lwz r31, _RwDlRenderMode@sda21(r13)
/* 800C3B88 000C0C68  3C 60 43 30 */	lis r3, 0x4330
/* 800C3B8C 000C0C6C  FF 80 08 90 */	fmr f28, f1
/* 800C3B90 000C0C70  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3B94 000C0C74  A0 9F 00 04 */	lhz r4, 0x4(r31)
/* 800C3B98 000C0C78  FF A0 10 90 */	fmr f29, f2
/* 800C3B9C 000C0C7C  A0 1F 00 06 */	lhz r0, 0x6(r31)
/* 800C3BA0 000C0C80  FF C0 18 90 */	fmr f30, f3
/* 800C3BA4 000C0C84  90 81 00 7C */	stw r4, 0x7c(r1)
/* 800C3BA8 000C0C88  FF E0 20 90 */	fmr f31, f4
/* 800C3BAC 000C0C8C  C8 82 97 18 */	lfd f4, "@712"@sda21(r2)
/* 800C3BB0 000C0C90  FC 40 08 90 */	fmr f2, f1
/* 800C3BB4 000C0C94  90 61 00 78 */	stw r3, 0x78(r1)
/* 800C3BB8 000C0C98  FC A0 08 90 */	fmr f5, f1
/* 800C3BBC 000C0C9C  C0 C2 97 04 */	lfs f6, "@707"@sda21(r2)
/* 800C3BC0 000C0CA0  C8 01 00 78 */	lfd f0, 0x78(r1)
/* 800C3BC4 000C0CA4  90 01 00 84 */	stw r0, 0x84(r1)
/* 800C3BC8 000C0CA8  EC 60 20 28 */	fsubs f3, f0, f4
/* 800C3BCC 000C0CAC  90 61 00 80 */	stw r3, 0x80(r1)
/* 800C3BD0 000C0CB0  C8 01 00 80 */	lfd f0, 0x80(r1)
/* 800C3BD4 000C0CB4  EC 80 20 28 */	fsubs f4, f0, f4
/* 800C3BD8 000C0CB8  48 10 C3 A1 */	bl GXSetViewport
/* 800C3BDC 000C0CBC  A0 BF 00 04 */	lhz r5, 0x4(r31)
/* 800C3BE0 000C0CC0  38 60 00 00 */	li r3, 0x0
/* 800C3BE4 000C0CC4  A0 DF 00 06 */	lhz r6, 0x6(r31)
/* 800C3BE8 000C0CC8  38 80 00 00 */	li r4, 0x0
/* 800C3BEC 000C0CCC  48 10 C3 D5 */	bl GXSetScissor
/* 800C3BF0 000C0CD0  A0 BF 00 04 */	lhz r5, 0x4(r31)
/* 800C3BF4 000C0CD4  38 60 00 00 */	li r3, 0x0
/* 800C3BF8 000C0CD8  A0 DF 00 06 */	lhz r6, 0x6(r31)
/* 800C3BFC 000C0CDC  38 80 00 00 */	li r4, 0x0
/* 800C3C00 000C0CE0  48 10 89 19 */	bl GXSetDispCopySrc
/* 800C3C04 000C0CE4  A0 7F 00 04 */	lhz r3, 0x4(r31)
/* 800C3C08 000C0CE8  A0 9F 00 08 */	lhz r4, 0x8(r31)
/* 800C3C0C 000C0CEC  48 10 8A 05 */	bl GXSetDispCopyDst
/* 800C3C10 000C0CF0  A0 9F 00 08 */	lhz r4, 0x8(r31)
/* 800C3C14 000C0CF4  3C 60 43 30 */	lis r3, 0x4330
/* 800C3C18 000C0CF8  A0 1F 00 06 */	lhz r0, 0x6(r31)
/* 800C3C1C 000C0CFC  90 81 00 8C */	stw r4, 0x8c(r1)
/* 800C3C20 000C0D00  C8 42 97 18 */	lfd f2, "@712"@sda21(r2)
/* 800C3C24 000C0D04  90 61 00 88 */	stw r3, 0x88(r1)
/* 800C3C28 000C0D08  C8 01 00 88 */	lfd f0, 0x88(r1)
/* 800C3C2C 000C0D0C  90 01 00 94 */	stw r0, 0x94(r1)
/* 800C3C30 000C0D10  EC 20 10 28 */	fsubs f1, f0, f2
/* 800C3C34 000C0D14  90 61 00 90 */	stw r3, 0x90(r1)
/* 800C3C38 000C0D18  C8 01 00 90 */	lfd f0, 0x90(r1)
/* 800C3C3C 000C0D1C  EC 00 10 28 */	fsubs f0, f0, f2
/* 800C3C40 000C0D20  EC 21 00 24 */	fdivs f1, f1, f0
/* 800C3C44 000C0D24  48 10 8D E5 */	bl GXSetDispCopyYScale
/* 800C3C48 000C0D28  88 7F 00 19 */	lbz r3, 0x19(r31)
/* 800C3C4C 000C0D2C  38 9F 00 1A */	addi r4, r31, 0x1a
/* 800C3C50 000C0D30  38 DF 00 32 */	addi r6, r31, 0x32
/* 800C3C54 000C0D34  38 A0 00 01 */	li r5, 0x1
/* 800C3C58 000C0D38  48 10 8F 15 */	bl GXSetCopyFilter
/* 800C3C5C 000C0D3C  88 1F 00 19 */	lbz r0, 0x19(r31)
/* 800C3C60 000C0D40  28 00 00 00 */	cmplwi r0, 0x0
/* 800C3C64 000C0D44  41 82 00 14 */	beq .L_800C3C78
/* 800C3C68 000C0D48  38 60 00 02 */	li r3, 0x2
/* 800C3C6C 000C0D4C  38 80 00 00 */	li r4, 0x0
/* 800C3C70 000C0D50  48 10 BC C5 */	bl GXSetPixelFmt
/* 800C3C74 000C0D54  48 00 00 10 */	b .L_800C3C84
.L_800C3C78:
/* 800C3C78 000C0D58  38 60 00 00 */	li r3, 0x0
/* 800C3C7C 000C0D5C  38 80 00 00 */	li r4, 0x0
/* 800C3C80 000C0D60  48 10 BC B5 */	bl GXSetPixelFmt
.L_800C3C84:
/* 800C3C84 000C0D64  38 60 00 00 */	li r3, 0x0
/* 800C3C88 000C0D68  48 10 90 ED */	bl GXSetDispCopyGamma
/* 800C3C8C 000C0D6C  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3C90 000C0D70  38 61 00 08 */	addi r3, r1, 0x8
/* 800C3C94 000C0D74  C0 42 97 08 */	lfs f2, "@708"@sda21(r2)
/* 800C3C98 000C0D78  FC 60 08 90 */	fmr f3, f1
/* 800C3C9C 000C0D7C  C0 82 97 0C */	lfs f4, "@709"@sda21(r2)
/* 800C3CA0 000C0D80  FC A0 08 90 */	fmr f5, f1
/* 800C3CA4 000C0D84  C0 C2 97 10 */	lfs f6, "@710"@sda21(r2)
/* 800C3CA8 000C0D88  48 10 CD F5 */	bl C_MTXOrtho
/* 800C3CAC 000C0D8C  38 61 00 08 */	addi r3, r1, 0x8
/* 800C3CB0 000C0D90  38 80 00 01 */	li r4, 0x1
/* 800C3CB4 000C0D94  48 10 BE DD */	bl GXSetProjection
/* 800C3CB8 000C0D98  38 61 00 48 */	addi r3, r1, 0x48
/* 800C3CBC 000C0D9C  48 10 CC C1 */	bl PSMTXIdentity
/* 800C3CC0 000C0DA0  38 61 00 48 */	addi r3, r1, 0x48
/* 800C3CC4 000C0DA4  38 80 00 00 */	li r4, 0x0
/* 800C3CC8 000C0DA8  48 10 C0 41 */	bl GXLoadPosMtxImm
/* 800C3CCC 000C0DAC  48 10 74 DD */	bl GXClearVtxDesc
/* 800C3CD0 000C0DB0  38 60 00 09 */	li r3, 0x9
/* 800C3CD4 000C0DB4  38 80 00 01 */	li r4, 0x1
/* 800C3CD8 000C0DB8  48 10 70 85 */	bl GXSetVtxDesc
/* 800C3CDC 000C0DBC  38 60 00 0B */	li r3, 0xb
/* 800C3CE0 000C0DC0  38 80 00 01 */	li r4, 0x1
/* 800C3CE4 000C0DC4  48 10 70 79 */	bl GXSetVtxDesc
/* 800C3CE8 000C0DC8  38 60 00 0D */	li r3, 0xd
/* 800C3CEC 000C0DCC  38 80 00 01 */	li r4, 0x1
/* 800C3CF0 000C0DD0  48 10 70 6D */	bl GXSetVtxDesc
/* 800C3CF4 000C0DD4  38 60 00 00 */	li r3, 0x0
/* 800C3CF8 000C0DD8  38 80 00 09 */	li r4, 0x9
/* 800C3CFC 000C0DDC  38 A0 00 01 */	li r5, 0x1
/* 800C3D00 000C0DE0  38 C0 00 03 */	li r6, 0x3
/* 800C3D04 000C0DE4  38 E0 00 00 */	li r7, 0x0
/* 800C3D08 000C0DE8  48 10 74 D9 */	bl GXSetVtxAttrFmt
/* 800C3D0C 000C0DEC  38 60 00 00 */	li r3, 0x0
/* 800C3D10 000C0DF0  38 80 00 0B */	li r4, 0xb
/* 800C3D14 000C0DF4  38 A0 00 01 */	li r5, 0x1
/* 800C3D18 000C0DF8  38 C0 00 05 */	li r6, 0x5
/* 800C3D1C 000C0DFC  38 E0 00 00 */	li r7, 0x0
/* 800C3D20 000C0E00  48 10 74 C1 */	bl GXSetVtxAttrFmt
/* 800C3D24 000C0E04  38 60 00 00 */	li r3, 0x0
/* 800C3D28 000C0E08  38 80 00 0D */	li r4, 0xd
/* 800C3D2C 000C0E0C  38 A0 00 01 */	li r5, 0x1
/* 800C3D30 000C0E10  38 C0 00 04 */	li r6, 0x4
/* 800C3D34 000C0E14  38 E0 00 00 */	li r7, 0x0
/* 800C3D38 000C0E18  48 10 74 A9 */	bl GXSetVtxAttrFmt
/* 800C3D3C 000C0E1C  38 60 00 01 */	li r3, 0x1
/* 800C3D40 000C0E20  48 10 7D 35 */	bl GXSetNumTexGens
/* 800C3D44 000C0E24  38 60 00 01 */	li r3, 0x1
/* 800C3D48 000C0E28  48 10 98 8D */	bl GXSetNumChans
/* 800C3D4C 000C0E2C  38 60 00 01 */	li r3, 0x1
/* 800C3D50 000C0E30  48 10 B7 61 */	bl GXSetNumTevStages
/* 800C3D54 000C0E34  38 60 00 00 */	li r3, 0x0
/* 800C3D58 000C0E38  38 80 00 01 */	li r4, 0x1
/* 800C3D5C 000C0E3C  38 A0 00 04 */	li r5, 0x4
/* 800C3D60 000C0E40  38 C0 00 3C */	li r6, 0x3c
/* 800C3D64 000C0E44  48 00 01 19 */	bl GXSetTexCoordGen
/* 800C3D68 000C0E48  38 60 00 00 */	li r3, 0x0
/* 800C3D6C 000C0E4C  38 80 00 00 */	li r4, 0x0
/* 800C3D70 000C0E50  48 10 B0 05 */	bl GXSetTevOp
/* 800C3D74 000C0E54  38 60 00 00 */	li r3, 0x0
/* 800C3D78 000C0E58  38 80 00 00 */	li r4, 0x0
/* 800C3D7C 000C0E5C  38 A0 00 00 */	li r5, 0x0
/* 800C3D80 000C0E60  38 C0 00 04 */	li r6, 0x4
/* 800C3D84 000C0E64  48 10 B5 91 */	bl GXSetTevOrder
/* 800C3D88 000C0E68  88 1F 00 18 */	lbz r0, 0x18(r31)
/* 800C3D8C 000C0E6C  28 00 00 00 */	cmplwi r0, 0x0
/* 800C3D90 000C0E70  41 82 00 50 */	beq .L_800C3DE0
/* 800C3D94 000C0E74  48 11 8B D1 */	bl VIGetNextField
/* 800C3D98 000C0E78  A0 BF 00 04 */	lhz r5, 0x4(r31)
/* 800C3D9C 000C0E7C  3C 80 43 30 */	lis r4, 0x4330
/* 800C3DA0 000C0E80  A0 1F 00 06 */	lhz r0, 0x6(r31)
/* 800C3DA4 000C0E84  90 A1 00 94 */	stw r5, 0x94(r1)
/* 800C3DA8 000C0E88  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3DAC 000C0E8C  90 81 00 90 */	stw r4, 0x90(r1)
/* 800C3DB0 000C0E90  C8 82 97 18 */	lfd f4, "@712"@sda21(r2)
/* 800C3DB4 000C0E94  FC 40 08 90 */	fmr f2, f1
/* 800C3DB8 000C0E98  C8 01 00 90 */	lfd f0, 0x90(r1)
/* 800C3DBC 000C0E9C  FC A0 08 90 */	fmr f5, f1
/* 800C3DC0 000C0EA0  90 01 00 8C */	stw r0, 0x8c(r1)
/* 800C3DC4 000C0EA4  EC 60 20 28 */	fsubs f3, f0, f4
/* 800C3DC8 000C0EA8  C0 C2 97 04 */	lfs f6, "@707"@sda21(r2)
/* 800C3DCC 000C0EAC  90 81 00 88 */	stw r4, 0x88(r1)
/* 800C3DD0 000C0EB0  C8 01 00 88 */	lfd f0, 0x88(r1)
/* 800C3DD4 000C0EB4  EC 80 20 28 */	fsubs f4, f0, f4
/* 800C3DD8 000C0EB8  48 10 C1 49 */	bl GXSetViewportJitter
/* 800C3DDC 000C0EBC  48 00 00 48 */	b .L_800C3E24
.L_800C3DE0:
/* 800C3DE0 000C0EC0  A0 9F 00 04 */	lhz r4, 0x4(r31)
/* 800C3DE4 000C0EC4  3C 60 43 30 */	lis r3, 0x4330
/* 800C3DE8 000C0EC8  A0 1F 00 06 */	lhz r0, 0x6(r31)
/* 800C3DEC 000C0ECC  90 81 00 94 */	stw r4, 0x94(r1)
/* 800C3DF0 000C0ED0  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3DF4 000C0ED4  90 61 00 90 */	stw r3, 0x90(r1)
/* 800C3DF8 000C0ED8  C8 82 97 18 */	lfd f4, "@712"@sda21(r2)
/* 800C3DFC 000C0EDC  FC 40 08 90 */	fmr f2, f1
/* 800C3E00 000C0EE0  C8 01 00 90 */	lfd f0, 0x90(r1)
/* 800C3E04 000C0EE4  FC A0 08 90 */	fmr f5, f1
/* 800C3E08 000C0EE8  90 01 00 8C */	stw r0, 0x8c(r1)
/* 800C3E0C 000C0EEC  EC 60 20 28 */	fsubs f3, f0, f4
/* 800C3E10 000C0EF0  C0 C2 97 04 */	lfs f6, "@707"@sda21(r2)
/* 800C3E14 000C0EF4  90 61 00 88 */	stw r3, 0x88(r1)
/* 800C3E18 000C0EF8  C8 01 00 88 */	lfd f0, 0x88(r1)
/* 800C3E1C 000C0EFC  EC 80 20 28 */	fsubs f4, f0, f4
/* 800C3E20 000C0F00  48 10 C1 59 */	bl GXSetViewport
.L_800C3E24:
/* 800C3E24 000C0F04  48 10 79 C1 */	bl GXInvalidateVtxCache
/* 800C3E28 000C0F08  48 10 A4 49 */	bl GXInvalidateTexAll
/* 800C3E2C 000C0F0C  FC 20 E0 90 */	fmr f1, f28
/* 800C3E30 000C0F10  80 6D 91 DC */	lwz r3, Image@sda21(r13)
/* 800C3E34 000C0F14  FC 40 E8 90 */	fmr f2, f29
/* 800C3E38 000C0F18  C0 A2 97 04 */	lfs f5, "@707"@sda21(r2)
/* 800C3E3C 000C0F1C  FC 60 F0 90 */	fmr f3, f30
/* 800C3E40 000C0F20  FC 80 F8 90 */	fmr f4, f31
/* 800C3E44 000C0F24  48 01 10 7D */	bl Blit_RAD_3D_image
/* 800C3E48 000C0F28  E3 E1 00 D8 */	psq_l f31, 0xd8(r1), 0, qr0
/* 800C3E4C 000C0F2C  CB E1 00 D0 */	lfd f31, 0xd0(r1)
/* 800C3E50 000C0F30  E3 C1 00 C8 */	psq_l f30, 0xc8(r1), 0, qr0
/* 800C3E54 000C0F34  CB C1 00 C0 */	lfd f30, 0xc0(r1)
/* 800C3E58 000C0F38  E3 A1 00 B8 */	psq_l f29, 0xb8(r1), 0, qr0
/* 800C3E5C 000C0F3C  CB A1 00 B0 */	lfd f29, 0xb0(r1)
/* 800C3E60 000C0F40  E3 81 00 A8 */	psq_l f28, 0xa8(r1), 0, qr0
/* 800C3E64 000C0F44  CB 81 00 A0 */	lfd f28, 0xa0(r1)
/* 800C3E68 000C0F48  80 01 00 E4 */	lwz r0, 0xe4(r1)
/* 800C3E6C 000C0F4C  83 E1 00 9C */	lwz r31, 0x9c(r1)
/* 800C3E70 000C0F50  7C 08 03 A6 */	mtlr r0
/* 800C3E74 000C0F54  38 21 00 E0 */	addi r1, r1, 0xe0
/* 800C3E78 000C0F58  4E 80 00 20 */	blr
.endfn DrawFrame__Fffff

.fn GXSetTexCoordGen, local
/* 800C3E7C 000C0F5C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C3E80 000C0F60  7C 08 02 A6 */	mflr r0
/* 800C3E84 000C0F64  38 E0 00 00 */	li r7, 0x0
/* 800C3E88 000C0F68  39 00 00 7D */	li r8, 0x7d
/* 800C3E8C 000C0F6C  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C3E90 000C0F70  48 10 79 65 */	bl GXSetTexCoordGen2
/* 800C3E94 000C0F74  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C3E98 000C0F78  7C 08 03 A6 */	mtlr r0
/* 800C3E9C 000C0F7C  38 21 00 10 */	addi r1, r1, 0x10
/* 800C3EA0 000C0F80  4E 80 00 20 */	blr
.endfn GXSetTexCoordGen

# Show_frame()
.fn Show_frame__Fv, local
/* 800C3EA4 000C0F84  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 800C3EA8 000C0F88  7C 08 02 A6 */	mflr r0
/* 800C3EAC 000C0F8C  38 60 02 80 */	li r3, 0x280
/* 800C3EB0 000C0F90  38 80 01 E0 */	li r4, 0x1e0
/* 800C3EB4 000C0F94  90 01 00 34 */	stw r0, 0x34(r1)
/* 800C3EB8 000C0F98  38 A0 00 00 */	li r5, 0x0
/* 800C3EBC 000C0F9C  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 800C3EC0 000C0FA0  80 02 BF 18 */	lwz r0, "@721"@sda21(r2)
/* 800C3EC4 000C0FA4  90 01 00 08 */	stw r0, 0x8(r1)
/* 800C3EC8 000C0FA8  4B FF C2 71 */	bl iCameraCreate__Fiii
/* 800C3ECC 000C0FAC  38 81 00 08 */	addi r4, r1, 0x8
/* 800C3ED0 000C0FB0  7C 7F 1B 78 */	mr r31, r3
/* 800C3ED4 000C0FB4  38 A0 00 01 */	li r5, 0x1
/* 800C3ED8 000C0FB8  48 17 39 D9 */	bl RwCameraClear
/* 800C3EDC 000C0FBC  7F E3 FB 78 */	mr r3, r31
/* 800C3EE0 000C0FC0  48 17 36 D1 */	bl RwCameraBeginUpdate
/* 800C3EE4 000C0FC4  80 CD 91 D8 */	lwz r6, Bink@sda21(r13)
/* 800C3EE8 000C0FC8  3C 00 43 30 */	lis r0, 0x4330
/* 800C3EEC 000C0FCC  38 A0 02 80 */	li r5, 0x280
/* 800C3EF0 000C0FD0  90 01 00 10 */	stw r0, 0x10(r1)
/* 800C3EF4 000C0FD4  80 86 00 00 */	lwz r4, 0x0(r6)
/* 800C3EF8 000C0FD8  38 60 01 E0 */	li r3, 0x1e0
/* 800C3EFC 000C0FDC  C8 22 97 18 */	lfd f1, "@712"@sda21(r2)
/* 800C3F00 000C0FE0  7C 85 23 96 */	divwu r4, r5, r4
/* 800C3F04 000C0FE4  90 01 00 18 */	stw r0, 0x18(r1)
/* 800C3F08 000C0FE8  90 81 00 14 */	stw r4, 0x14(r1)
/* 800C3F0C 000C0FEC  C8 01 00 10 */	lfd f0, 0x10(r1)
/* 800C3F10 000C0FF0  EC 00 08 28 */	fsubs f0, f0, f1
/* 800C3F14 000C0FF4  D0 0D 83 40 */	stfs f0, Width_scale@sda21(r13)
/* 800C3F18 000C0FF8  80 06 00 04 */	lwz r0, 0x4(r6)
/* 800C3F1C 000C0FFC  C8 22 97 18 */	lfd f1, "@712"@sda21(r2)
/* 800C3F20 000C1000  7C 03 03 96 */	divwu r0, r3, r0
/* 800C3F24 000C1004  90 01 00 1C */	stw r0, 0x1c(r1)
/* 800C3F28 000C1008  C8 01 00 18 */	lfd f0, 0x18(r1)
/* 800C3F2C 000C100C  EC 00 08 28 */	fsubs f0, f0, f1
/* 800C3F30 000C1010  D0 0D 83 44 */	stfs f0, Height_scale@sda21(r13)
/* 800C3F34 000C1014  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3F38 000C1018  FC 40 08 90 */	fmr f2, f1
/* 800C3F3C 000C101C  FC 60 08 90 */	fmr f3, f1
/* 800C3F40 000C1020  FC 80 08 90 */	fmr f4, f1
/* 800C3F44 000C1024  48 00 07 49 */	bl xDrawLine2D_LocaliFMVVersion__Fffff
/* 800C3F48 000C1028  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C3F4C 000C102C  C0 6D 83 40 */	lfs f3, Width_scale@sda21(r13)
/* 800C3F50 000C1030  FC 40 08 90 */	fmr f2, f1
/* 800C3F54 000C1034  C0 8D 83 44 */	lfs f4, Height_scale@sda21(r13)
/* 800C3F58 000C1038  4B FF FB FD */	bl DrawFrame__Fffff
/* 800C3F5C 000C103C  7F E3 FB 78 */	mr r3, r31
/* 800C3F60 000C1040  48 17 36 29 */	bl RwCameraEndUpdate
/* 800C3F64 000C1044  7F E3 FB 78 */	mr r3, r31
/* 800C3F68 000C1048  38 80 00 00 */	li r4, 0x0
/* 800C3F6C 000C104C  38 A0 00 00 */	li r5, 0x0
/* 800C3F70 000C1050  48 17 39 8D */	bl RwCameraShowRaster
/* 800C3F74 000C1054  7F E3 FB 78 */	mr r3, r31
/* 800C3F78 000C1058  4B FF C2 99 */	bl iCameraDestroy__FP8RwCamera
/* 800C3F7C 000C105C  80 01 00 34 */	lwz r0, 0x34(r1)
/* 800C3F80 000C1060  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 800C3F84 000C1064  7C 08 03 A6 */	mtlr r0
/* 800C3F88 000C1068  38 21 00 30 */	addi r1, r1, 0x30
/* 800C3F8C 000C106C  4E 80 00 20 */	blr
.endfn Show_frame__Fv

# arammalloc(unsigned long)
.fn arammalloc__FUl, local
/* 800C3F90 000C1070  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C3F94 000C1074  7C 08 02 A6 */	mflr r0
/* 800C3F98 000C1078  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C3F9C 000C107C  48 0F 1D FD */	bl ARAlloc
/* 800C3FA0 000C1080  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C3FA4 000C1084  7C 08 03 A6 */	mtlr r0
/* 800C3FA8 000C1088  38 21 00 10 */	addi r1, r1, 0x10
/* 800C3FAC 000C108C  4E 80 00 20 */	blr
.endfn arammalloc__FUl

# aramfree(void*)
.fn aramfree__FPv, local
/* 800C3FB0 000C1090  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C3FB4 000C1094  7C 08 02 A6 */	mflr r0
/* 800C3FB8 000C1098  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C3FBC 000C109C  38 61 00 08 */	addi r3, r1, 0x8
/* 800C3FC0 000C10A0  48 0F 1E 41 */	bl ARFree
/* 800C3FC4 000C10A4  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C3FC8 000C10A8  7C 08 03 A6 */	mtlr r0
/* 800C3FCC 000C10AC  38 21 00 10 */	addi r1, r1, 0x10
/* 800C3FD0 000C10B0  4E 80 00 20 */	blr
.endfn aramfree__FPv

# PlayFMV(char*, unsigned long, float)
.fn PlayFMV__FPcUlf, local
/* 800C3FD4 000C10B4  94 21 FE B0 */	stwu r1, -0x150(r1)
/* 800C3FD8 000C10B8  7C 08 02 A6 */	mflr r0
/* 800C3FDC 000C10BC  90 01 01 54 */	stw r0, 0x154(r1)
/* 800C3FE0 000C10C0  DB E1 01 40 */	stfd f31, 0x140(r1)
/* 800C3FE4 000C10C4  F3 E1 01 48 */	psq_st f31, 0x148(r1), 0, qr0
/* 800C3FE8 000C10C8  93 E1 01 3C */	stw r31, 0x13c(r1)
/* 800C3FEC 000C10CC  93 C1 01 38 */	stw r30, 0x138(r1)
/* 800C3FF0 000C10D0  93 A1 01 34 */	stw r29, 0x134(r1)
/* 800C3FF4 000C10D4  93 81 01 30 */	stw r28, 0x130(r1)
/* 800C3FF8 000C10D8  FF E0 08 90 */	fmr f31, f1
/* 800C3FFC 000C10DC  7C 7D 1B 78 */	mr r29, r3
/* 800C4000 000C10E0  7C 9E 23 78 */	mr r30, r4
/* 800C4004 000C10E4  38 61 00 08 */	addi r3, r1, 0x8
/* 800C4008 000C10E8  48 10 84 75 */	bl GXGetCullMode
/* 800C400C 000C10EC  80 6D A0 14 */	lwz r3, _RwDlRenderMode@sda21(r13)
/* 800C4010 000C10F0  48 00 03 3D */	bl InitDisplay__4iFMVFP16_GXRenderModeObj
/* 800C4014 000C10F4  3C 60 80 3C */	lis r3, globals@ha
/* 800C4018 000C10F8  3B E3 05 58 */	addi r31, r3, globals@l
/* 800C401C 000C10FC  80 7F 03 1C */	lwz r3, 0x31c(r31)
/* 800C4020 000C1100  48 00 6E 35 */	bl iPadStopRumble__FP8_tagxPad
/* 800C4024 000C1104  3C 60 80 0C */	lis r3, arammalloc__FUl@ha
/* 800C4028 000C1108  3C 80 80 0C */	lis r4, aramfree__FPv@ha
/* 800C402C 000C110C  38 63 3F 90 */	addi r3, r3, arammalloc__FUl@l
/* 800C4030 000C1110  38 84 3F B0 */	addi r4, r4, aramfree__FPv@l
/* 800C4034 000C1114  48 0D 2B F5 */	bl RADSetAudioMemory
/* 800C4038 000C1118  3C 60 80 0C */	lis r3, iFMVmalloc__FUl@ha
/* 800C403C 000C111C  3C 80 80 0C */	lis r4, iFMVfree__FPv@ha
/* 800C4040 000C1120  38 63 39 98 */	addi r3, r3, iFMVmalloc__FUl@l
/* 800C4044 000C1124  38 84 39 C4 */	addi r4, r4, iFMVfree__FPv@l
/* 800C4048 000C1128  48 0D 2A CD */	bl RADSetMemory
/* 800C404C 000C112C  4B FF FA 1D */	bl Setup_surface_array__Fv
/* 800C4050 000C1130  7F A4 EB 78 */	mr r4, r29
/* 800C4054 000C1134  38 00 00 2F */	li r0, 0x2f
/* 800C4058 000C1138  48 00 00 14 */	b .L_800C406C
.L_800C405C:
/* 800C405C 000C113C  28 03 00 5C */	cmplwi r3, 0x5c
/* 800C4060 000C1140  40 82 00 08 */	bne .L_800C4068
/* 800C4064 000C1144  98 04 00 00 */	stb r0, 0x0(r4)
.L_800C4068:
/* 800C4068 000C1148  38 84 00 01 */	addi r4, r4, 0x1
.L_800C406C:
/* 800C406C 000C114C  88 64 00 00 */	lbz r3, 0x0(r4)
/* 800C4070 000C1150  28 03 00 00 */	cmplwi r3, 0x0
/* 800C4074 000C1154  40 82 FF E8 */	bne .L_800C405C
/* 800C4078 000C1158  3B 81 00 B4 */	addi r28, r1, 0xb4
.L_800C407C:
/* 800C407C 000C115C  48 0B CA 41 */	bl IsDiskIDed__8iTRCDiskFv
/* 800C4080 000C1160  54 60 06 3F */	clrlwi. r0, r3, 24
/* 800C4084 000C1164  41 82 00 24 */	beq .L_800C40A8
/* 800C4088 000C1168  7F A3 EB 78 */	mr r3, r29
/* 800C408C 000C116C  38 80 00 00 */	li r4, 0x0
/* 800C4090 000C1170  48 0D 4A 19 */	bl BinkOpen
/* 800C4094 000C1174  90 6D 91 D8 */	stw r3, Bink@sda21(r13)
/* 800C4098 000C1178  80 0D 91 D8 */	lwz r0, Bink@sda21(r13)
/* 800C409C 000C117C  28 00 00 00 */	cmplwi r0, 0x0
/* 800C40A0 000C1180  40 82 00 08 */	bne .L_800C40A8
/* 800C40A4 000C1184  48 0D 42 21 */	bl BinkGetError
.L_800C40A8:
/* 800C40A8 000C1188  48 0B CB E5 */	bl CheckDVDAndResetState__8iTRCDiskFv
/* 800C40AC 000C118C  54 60 06 3F */	clrlwi. r0, r3, 24
/* 800C40B0 000C1190  40 82 00 60 */	bne .L_800C4110
/* 800C40B4 000C1194  80 0D 91 D8 */	lwz r0, Bink@sda21(r13)
/* 800C40B8 000C1198  28 00 00 00 */	cmplwi r0, 0x0
/* 800C40BC 000C119C  40 82 00 48 */	bne .L_800C4104
/* 800C40C0 000C11A0  7F A3 EB 78 */	mr r3, r29
/* 800C40C4 000C11A4  38 A1 00 0C */	addi r5, r1, 0xc
/* 800C40C8 000C11A8  38 80 00 00 */	li r4, 0x0
/* 800C40CC 000C11AC  4B FF F3 01 */	bl iFileOpen__FPCciP9tag_xFile
/* 800C40D0 000C11B0  7F 83 E3 78 */	mr r3, r28
/* 800C40D4 000C11B4  38 80 00 00 */	li r4, 0x0
/* 800C40D8 000C11B8  38 A0 00 00 */	li r5, 0x0
/* 800C40DC 000C11BC  38 C0 00 02 */	li r6, 0x2
/* 800C40E0 000C11C0  48 0F FF 81 */	bl DVDSeekAsyncPrio
/* 800C40E4 000C11C4  48 0B CB A9 */	bl CheckDVDAndResetState__8iTRCDiskFv
/* 800C40E8 000C11C8  54 60 06 3F */	clrlwi. r0, r3, 24
/* 800C40EC 000C11CC  41 82 00 10 */	beq .L_800C40FC
/* 800C40F0 000C11D0  7F 83 E3 78 */	mr r3, r28
/* 800C40F4 000C11D4  48 10 25 11 */	bl DVDCancel
/* 800C40F8 000C11D8  48 00 00 18 */	b .L_800C4110
.L_800C40FC:
/* 800C40FC 000C11DC  7F 83 E3 78 */	mr r3, r28
/* 800C4100 000C11E0  48 10 25 05 */	bl DVDCancel
.L_800C4104:
/* 800C4104 000C11E4  80 0D 91 D8 */	lwz r0, Bink@sda21(r13)
/* 800C4108 000C11E8  28 00 00 00 */	cmplwi r0, 0x0
/* 800C410C 000C11EC  41 82 FF 70 */	beq .L_800C407C
.L_800C4110:
/* 800C4110 000C11F0  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C4114 000C11F4  28 03 00 00 */	cmplwi r3, 0x0
/* 800C4118 000C11F8  41 82 01 EC */	beq .L_800C4304
/* 800C411C 000C11FC  80 03 00 F0 */	lwz r0, 0xf0(r3)
/* 800C4120 000C1200  2C 00 00 00 */	cmpwi r0, 0x0
/* 800C4124 000C1204  41 82 00 78 */	beq .L_800C419C
/* 800C4128 000C1208  38 00 00 00 */	li r0, 0x0
/* 800C412C 000C120C  3C 60 80 3C */	lis r3, gSnd@ha
/* 800C4130 000C1210  90 0D 91 EC */	stw r0, ip@sda21(r13)
/* 800C4134 000C1214  3B 83 D5 B4 */	addi r28, r3, gSnd@l
/* 800C4138 000C1218  48 00 00 50 */	b .L_800C4188
.L_800C413C:
/* 800C413C 000C121C  C0 1C 00 14 */	lfs f0, 0x14(r28)
/* 800C4140 000C1220  D0 0D 91 E8 */	stfs f0, vol@sda21(r13)
/* 800C4144 000C1224  C0 2D 91 E8 */	lfs f1, vol@sda21(r13)
/* 800C4148 000C1228  C0 0D 91 E8 */	lfs f0, vol@sda21(r13)
/* 800C414C 000C122C  EC 01 00 32 */	fmuls f0, f1, f0
/* 800C4150 000C1230  D0 0D 91 E8 */	stfs f0, vol@sda21(r13)
/* 800C4154 000C1234  C0 2D 91 E8 */	lfs f1, vol@sda21(r13)
/* 800C4158 000C1238  C0 02 97 20 */	lfs f0, "@842"@sda21(r2)
/* 800C415C 000C123C  EC 01 00 32 */	fmuls f0, f1, f0
/* 800C4160 000C1240  D0 0D 91 E8 */	stfs f0, vol@sda21(r13)
/* 800C4164 000C1244  C0 0D 91 E8 */	lfs f0, vol@sda21(r13)
/* 800C4168 000C1248  80 8D 91 EC */	lwz r4, ip@sda21(r13)
/* 800C416C 000C124C  FC 00 00 1E */	fctiwz f0, f0
/* 800C4170 000C1250  D8 01 01 20 */	stfd f0, 0x120(r1)
/* 800C4174 000C1254  80 A1 01 24 */	lwz r5, 0x124(r1)
/* 800C4178 000C1258  48 0D 7B A9 */	bl BinkSetVolume
/* 800C417C 000C125C  80 6D 91 EC */	lwz r3, ip@sda21(r13)
/* 800C4180 000C1260  38 03 00 01 */	addi r0, r3, 0x1
/* 800C4184 000C1264  90 0D 91 EC */	stw r0, ip@sda21(r13)
.L_800C4188:
/* 800C4188 000C1268  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C418C 000C126C  80 8D 91 EC */	lwz r4, ip@sda21(r13)
/* 800C4190 000C1270  80 03 00 F0 */	lwz r0, 0xf0(r3)
/* 800C4194 000C1274  7C 04 00 00 */	cmpw r4, r0
/* 800C4198 000C1278  40 81 FF A4 */	ble .L_800C413C
.L_800C419C:
/* 800C419C 000C127C  80 AD 91 D8 */	lwz r5, Bink@sda21(r13)
/* 800C41A0 000C1280  38 60 00 00 */	li r3, 0x0
/* 800C41A4 000C1284  80 CD 91 D4 */	lwz r6, fuckingSurfaceType@sda21(r13)
/* 800C41A8 000C1288  80 85 00 00 */	lwz r4, 0x0(r5)
/* 800C41AC 000C128C  80 A5 00 04 */	lwz r5, 0x4(r5)
/* 800C41B0 000C1290  48 01 08 D5 */	bl Open_RAD_3D_image
/* 800C41B4 000C1294  90 6D 91 DC */	stw r3, Image@sda21(r13)
/* 800C41B8 000C1298  80 0D 91 DC */	lwz r0, Image@sda21(r13)
/* 800C41BC 000C129C  28 00 00 00 */	cmplwi r0, 0x0
/* 800C41C0 000C12A0  41 82 01 0C */	beq .L_800C42CC
/* 800C41C4 000C12A4  80 8D 91 D0 */	lwz r4, frame_num@sda21(r13)
/* 800C41C8 000C12A8  2C 04 00 00 */	cmpwi r4, 0x0
/* 800C41CC 000C12AC  41 82 00 10 */	beq .L_800C41DC
/* 800C41D0 000C12B0  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C41D4 000C12B4  38 A0 00 00 */	li r5, 0x0
/* 800C41D8 000C12B8  48 0D 68 A1 */	bl BinkGoto
.L_800C41DC:
/* 800C41DC 000C12BC  38 00 00 00 */	li r0, 0x0
/* 800C41E0 000C12C0  3C 60 80 3C */	lis r3, globals@ha
/* 800C41E4 000C12C4  90 0D 91 F0 */	stw r0, oof@sda21(r13)
/* 800C41E8 000C12C8  3B 83 05 58 */	addi r28, r3, globals@l
/* 800C41EC 000C12CC  3F A0 43 30 */	lis r29, 0x4330
.L_800C41F0:
/* 800C41F0 000C12D0  48 0B CA 9D */	bl CheckDVDAndResetState__8iTRCDiskFv
/* 800C41F4 000C12D4  54 60 06 3F */	clrlwi. r0, r3, 24
/* 800C41F8 000C12D8  40 82 00 D4 */	bne .L_800C42CC
/* 800C41FC 000C12DC  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C4200 000C12E0  48 0D 6C 95 */	bl BinkWait
/* 800C4204 000C12E4  2C 03 00 00 */	cmpwi r3, 0x0
/* 800C4208 000C12E8  40 82 00 24 */	bne .L_800C422C
/* 800C420C 000C12EC  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C4210 000C12F0  38 A0 00 01 */	li r5, 0x1
/* 800C4214 000C12F4  80 8D 91 DC */	lwz r4, Image@sda21(r13)
/* 800C4218 000C12F8  4B FF F8 85 */	bl Decompress_frame__FP4BINKP10RAD3DIMAGEl
/* 800C421C 000C12FC  4B FF FC 89 */	bl Show_frame__Fv
/* 800C4220 000C1300  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C4224 000C1304  48 0D 65 5D */	bl BinkNextFrame
/* 800C4228 000C1308  48 00 00 14 */	b .L_800C423C
.L_800C422C:
/* 800C422C 000C130C  80 0D 91 E0 */	lwz r0, Paused@sda21(r13)
/* 800C4230 000C1310  2C 00 00 00 */	cmpwi r0, 0x0
/* 800C4234 000C1314  41 82 00 08 */	beq .L_800C423C
/* 800C4238 000C1318  4B FF FC 6D */	bl Show_frame__Fv
.L_800C423C:
/* 800C423C 000C131C  88 7C 06 D1 */	lbz r3, 0x6d1(r28)
/* 800C4240 000C1320  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C4244 000C1324  4B F7 1D 81 */	bl xPadUpdate__Fif
/* 800C4248 000C1328  80 8D 91 D8 */	lwz r4, Bink@sda21(r13)
/* 800C424C 000C132C  28 1E 00 00 */	cmplwi r30, 0x0
/* 800C4250 000C1330  93 A1 01 20 */	stw r29, 0x120(r1)
/* 800C4254 000C1334  80 64 00 14 */	lwz r3, 0x14(r4)
/* 800C4258 000C1338  80 04 00 18 */	lwz r0, 0x18(r4)
/* 800C425C 000C133C  80 A4 00 0C */	lwz r5, 0xc(r4)
/* 800C4260 000C1340  7C 03 03 96 */	divwu r0, r3, r0
/* 800C4264 000C1344  93 A1 01 28 */	stw r29, 0x128(r1)
/* 800C4268 000C1348  C8 42 97 18 */	lfd f2, "@712"@sda21(r2)
/* 800C426C 000C134C  90 A1 01 24 */	stw r5, 0x124(r1)
/* 800C4270 000C1350  C8 01 01 20 */	lfd f0, 0x120(r1)
/* 800C4274 000C1354  EC 20 10 28 */	fsubs f1, f0, f2
/* 800C4278 000C1358  90 01 01 2C */	stw r0, 0x12c(r1)
/* 800C427C 000C135C  C8 01 01 28 */	lfd f0, 0x128(r1)
/* 800C4280 000C1360  EC 00 10 28 */	fsubs f0, f0, f2
/* 800C4284 000C1364  EC 01 00 24 */	fdivs f0, f1, f0
/* 800C4288 000C1368  41 82 00 2C */	beq .L_800C42B4
/* 800C428C 000C136C  FC 00 F8 40 */	fcmpo cr0, f0, f31
/* 800C4290 000C1370  4C 41 13 82 */	cror eq, gt, eq
/* 800C4294 000C1374  40 82 00 20 */	bne .L_800C42B4
/* 800C4298 000C1378  80 7F 03 1C */	lwz r3, 0x31c(r31)
/* 800C429C 000C137C  80 03 00 30 */	lwz r0, 0x30(r3)
/* 800C42A0 000C1380  7C 00 F0 39 */	and. r0, r0, r30
/* 800C42A4 000C1384  41 82 00 10 */	beq .L_800C42B4
/* 800C42A8 000C1388  38 00 FF FF */	li r0, -0x1
/* 800C42AC 000C138C  90 0D 91 D0 */	stw r0, frame_num@sda21(r13)
/* 800C42B0 000C1390  48 00 00 1C */	b .L_800C42CC
.L_800C42B4:
/* 800C42B4 000C1394  80 64 00 08 */	lwz r3, 0x8(r4)
/* 800C42B8 000C1398  38 03 FF FF */	addi r0, r3, -0x1
/* 800C42BC 000C139C  7C 05 00 40 */	cmplw r5, r0
/* 800C42C0 000C13A0  41 80 FF 30 */	blt .L_800C41F0
/* 800C42C4 000C13A4  38 00 FF FF */	li r0, -0x1
/* 800C42C8 000C13A8  90 0D 91 D0 */	stw r0, frame_num@sda21(r13)
.L_800C42CC:
/* 800C42CC 000C13AC  80 0D 91 D0 */	lwz r0, frame_num@sda21(r13)
/* 800C42D0 000C13B0  2C 00 FF FF */	cmpwi r0, -0x1
/* 800C42D4 000C13B4  41 82 00 10 */	beq .L_800C42E4
/* 800C42D8 000C13B8  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C42DC 000C13BC  80 03 00 0C */	lwz r0, 0xc(r3)
/* 800C42E0 000C13C0  90 0D 91 D0 */	stw r0, frame_num@sda21(r13)
.L_800C42E4:
/* 800C42E4 000C13C4  80 6D 91 DC */	lwz r3, Image@sda21(r13)
/* 800C42E8 000C13C8  48 01 08 99 */	bl Close_RAD_3D_image
/* 800C42EC 000C13CC  38 00 00 00 */	li r0, 0x0
/* 800C42F0 000C13D0  90 0D 91 DC */	stw r0, Image@sda21(r13)
/* 800C42F4 000C13D4  80 6D 91 D8 */	lwz r3, Bink@sda21(r13)
/* 800C42F8 000C13D8  48 0D 69 B5 */	bl BinkClose
/* 800C42FC 000C13DC  38 00 00 00 */	li r0, 0x0
/* 800C4300 000C13E0  90 0D 91 D8 */	stw r0, Bink@sda21(r13)
.L_800C4304:
/* 800C4304 000C13E4  80 61 00 08 */	lwz r3, 0x8(r1)
/* 800C4308 000C13E8  48 10 81 31 */	bl GXSetCullMode
/* 800C430C 000C13EC  48 00 ED B5 */	bl iVSync__Fv
/* 800C4310 000C13F0  3C 60 80 3C */	lis r3, globals@ha
/* 800C4314 000C13F4  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C4318 000C13F8  38 63 05 58 */	addi r3, r3, globals@l
/* 800C431C 000C13FC  88 63 06 D1 */	lbz r3, 0x6d1(r3)
/* 800C4320 000C1400  4B F7 1C A5 */	bl xPadUpdate__Fif
/* 800C4324 000C1404  E3 E1 01 48 */	psq_l f31, 0x148(r1), 0, qr0
/* 800C4328 000C1408  80 01 01 54 */	lwz r0, 0x154(r1)
/* 800C432C 000C140C  CB E1 01 40 */	lfd f31, 0x140(r1)
/* 800C4330 000C1410  83 E1 01 3C */	lwz r31, 0x13c(r1)
/* 800C4334 000C1414  83 C1 01 38 */	lwz r30, 0x138(r1)
/* 800C4338 000C1418  83 A1 01 34 */	lwz r29, 0x134(r1)
/* 800C433C 000C141C  83 81 01 30 */	lwz r28, 0x130(r1)
/* 800C4340 000C1420  7C 08 03 A6 */	mtlr r0
/* 800C4344 000C1424  38 21 01 50 */	addi r1, r1, 0x150
/* 800C4348 000C1428  4E 80 00 20 */	blr
.endfn PlayFMV__FPcUlf

# iFMV::InitDisplay(_GXRenderModeObj*)
.fn InitDisplay__4iFMVFP16_GXRenderModeObj, global
/* 800C434C 000C142C  94 21 FF 60 */	stwu r1, -0xa0(r1)
/* 800C4350 000C1430  7C 08 02 A6 */	mflr r0
/* 800C4354 000C1434  90 01 00 A4 */	stw r0, 0xa4(r1)
/* 800C4358 000C1438  93 E1 00 9C */	stw r31, 0x9c(r1)
/* 800C435C 000C143C  3B ED 91 F4 */	addi r31, r13, mXFBs__4iFMV@sda21
/* 800C4360 000C1440  3B FF 00 04 */	addi r31, r31, 0x4
/* 800C4364 000C1444  80 02 BF 1C */	lwz r0, "@880"@sda21(r2)
/* 800C4368 000C1448  7F E4 FB 78 */	mr r4, r31
/* 800C436C 000C144C  90 6D 92 00 */	stw r3, mRenderMode__4iFMV@sda21(r13)
/* 800C4370 000C1450  38 6D 91 F4 */	addi r3, r13, mXFBs__4iFMV@sda21
/* 800C4374 000C1454  90 01 00 0C */	stw r0, 0xc(r1)
/* 800C4378 000C1458  48 18 26 21 */	bl RwGameCubeGetXFBs
/* 800C437C 000C145C  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 800C4380 000C1460  90 0D 91 FC */	stw r0, mCurrentFrameBuffer__4iFMV@sda21(r13)
/* 800C4384 000C1464  48 00 01 91 */	bl InitGX__4iFMVFv
/* 800C4388 000C1468  48 00 02 B1 */	bl InitVI__4iFMVFv
/* 800C438C 000C146C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 800C4390 000C1470  3C 80 01 00 */	lis r4, 0x100
/* 800C4394 000C1474  38 61 00 08 */	addi r3, r1, 0x8
/* 800C4398 000C1478  90 01 00 08 */	stw r0, 0x8(r1)
/* 800C439C 000C147C  38 84 FF FF */	addi r4, r4, -0x1
/* 800C43A0 000C1480  48 10 87 55 */	bl GXSetCopyClear
/* 800C43A4 000C1484  80 CD 92 00 */	lwz r6, mRenderMode__4iFMV@sda21(r13)
/* 800C43A8 000C1488  3C 80 43 30 */	lis r4, 0x4330
/* 800C43AC 000C148C  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C43B0 000C1490  38 61 00 40 */	addi r3, r1, 0x40
/* 800C43B4 000C1494  A0 A6 00 06 */	lhz r5, 0x6(r6)
/* 800C43B8 000C1498  A0 06 00 04 */	lhz r0, 0x4(r6)
/* 800C43BC 000C149C  FC 60 08 90 */	fmr f3, f1
/* 800C43C0 000C14A0  90 A1 00 84 */	stw r5, 0x84(r1)
/* 800C43C4 000C14A4  FC A0 08 90 */	fmr f5, f1
/* 800C43C8 000C14A8  C8 82 97 18 */	lfd f4, "@712"@sda21(r2)
/* 800C43CC 000C14AC  90 81 00 80 */	stw r4, 0x80(r1)
/* 800C43D0 000C14B0  C0 C2 97 24 */	lfs f6, "@887"@sda21(r2)
/* 800C43D4 000C14B4  C8 01 00 80 */	lfd f0, 0x80(r1)
/* 800C43D8 000C14B8  90 01 00 8C */	stw r0, 0x8c(r1)
/* 800C43DC 000C14BC  EC 40 20 28 */	fsubs f2, f0, f4
/* 800C43E0 000C14C0  90 81 00 88 */	stw r4, 0x88(r1)
/* 800C43E4 000C14C4  C8 01 00 88 */	lfd f0, 0x88(r1)
/* 800C43E8 000C14C8  EC 80 20 28 */	fsubs f4, f0, f4
/* 800C43EC 000C14CC  48 10 C6 B1 */	bl C_MTXOrtho
/* 800C43F0 000C14D0  38 61 00 40 */	addi r3, r1, 0x40
/* 800C43F4 000C14D4  38 80 00 01 */	li r4, 0x1
/* 800C43F8 000C14D8  48 10 B7 99 */	bl GXSetProjection
/* 800C43FC 000C14DC  38 61 00 10 */	addi r3, r1, 0x10
/* 800C4400 000C14E0  48 10 C5 7D */	bl PSMTXIdentity
/* 800C4404 000C14E4  38 61 00 10 */	addi r3, r1, 0x10
/* 800C4408 000C14E8  38 80 00 00 */	li r4, 0x0
/* 800C440C 000C14EC  48 10 B8 FD */	bl GXLoadPosMtxImm
/* 800C4410 000C14F0  38 60 00 00 */	li r3, 0x0
/* 800C4414 000C14F4  48 10 B9 95 */	bl GXSetCurrentMtx
/* 800C4418 000C14F8  38 60 00 01 */	li r3, 0x1
/* 800C441C 000C14FC  38 80 00 07 */	li r4, 0x7
/* 800C4420 000C1500  38 A0 00 01 */	li r5, 0x1
/* 800C4424 000C1504  48 10 B4 A9 */	bl GXSetZMode
/* 800C4428 000C1508  38 60 00 01 */	li r3, 0x1
/* 800C442C 000C150C  38 80 00 01 */	li r4, 0x1
/* 800C4430 000C1510  38 A0 00 01 */	li r5, 0x1
/* 800C4434 000C1514  38 C0 00 00 */	li r6, 0x0
/* 800C4438 000C1518  48 10 B3 E9 */	bl GXSetBlendMode
/* 800C443C 000C151C  48 10 6D 6D */	bl GXClearVtxDesc
/* 800C4440 000C1520  38 60 00 09 */	li r3, 0x9
/* 800C4444 000C1524  38 80 00 01 */	li r4, 0x1
/* 800C4448 000C1528  48 10 69 15 */	bl GXSetVtxDesc
/* 800C444C 000C152C  38 60 00 0B */	li r3, 0xb
/* 800C4450 000C1530  38 80 00 01 */	li r4, 0x1
/* 800C4454 000C1534  48 10 69 09 */	bl GXSetVtxDesc
/* 800C4458 000C1538  38 60 00 0D */	li r3, 0xd
/* 800C445C 000C153C  38 80 00 01 */	li r4, 0x1
/* 800C4460 000C1540  48 10 68 FD */	bl GXSetVtxDesc
/* 800C4464 000C1544  38 60 00 00 */	li r3, 0x0
/* 800C4468 000C1548  38 80 00 09 */	li r4, 0x9
/* 800C446C 000C154C  38 A0 00 01 */	li r5, 0x1
/* 800C4470 000C1550  38 C0 00 03 */	li r6, 0x3
/* 800C4474 000C1554  38 E0 00 00 */	li r7, 0x0
/* 800C4478 000C1558  48 10 6D 69 */	bl GXSetVtxAttrFmt
/* 800C447C 000C155C  38 60 00 00 */	li r3, 0x0
/* 800C4480 000C1560  38 80 00 0B */	li r4, 0xb
/* 800C4484 000C1564  38 A0 00 01 */	li r5, 0x1
/* 800C4488 000C1568  38 C0 00 05 */	li r6, 0x5
/* 800C448C 000C156C  38 E0 00 00 */	li r7, 0x0
/* 800C4490 000C1570  48 10 6D 51 */	bl GXSetVtxAttrFmt
/* 800C4494 000C1574  38 60 00 00 */	li r3, 0x0
/* 800C4498 000C1578  38 80 00 0D */	li r4, 0xd
/* 800C449C 000C157C  38 A0 00 01 */	li r5, 0x1
/* 800C44A0 000C1580  38 C0 00 04 */	li r6, 0x4
/* 800C44A4 000C1584  38 E0 00 00 */	li r7, 0x0
/* 800C44A8 000C1588  48 10 6D 39 */	bl GXSetVtxAttrFmt
/* 800C44AC 000C158C  38 60 00 01 */	li r3, 0x1
/* 800C44B0 000C1590  48 10 75 C5 */	bl GXSetNumTexGens
/* 800C44B4 000C1594  38 60 00 01 */	li r3, 0x1
/* 800C44B8 000C1598  48 10 91 1D */	bl GXSetNumChans
/* 800C44BC 000C159C  38 60 00 01 */	li r3, 0x1
/* 800C44C0 000C15A0  48 10 AF F1 */	bl GXSetNumTevStages
/* 800C44C4 000C15A4  38 60 00 00 */	li r3, 0x0
/* 800C44C8 000C15A8  38 80 00 01 */	li r4, 0x1
/* 800C44CC 000C15AC  38 A0 00 04 */	li r5, 0x4
/* 800C44D0 000C15B0  38 C0 00 3C */	li r6, 0x3c
/* 800C44D4 000C15B4  4B FF F9 A9 */	bl GXSetTexCoordGen
/* 800C44D8 000C15B8  38 60 00 00 */	li r3, 0x0
/* 800C44DC 000C15BC  38 80 00 00 */	li r4, 0x0
/* 800C44E0 000C15C0  48 10 A8 95 */	bl GXSetTevOp
/* 800C44E4 000C15C4  38 60 00 00 */	li r3, 0x0
/* 800C44E8 000C15C8  38 80 00 00 */	li r4, 0x0
/* 800C44EC 000C15CC  38 A0 00 00 */	li r5, 0x0
/* 800C44F0 000C15D0  38 C0 00 04 */	li r6, 0x4
/* 800C44F4 000C15D4  48 10 AE 21 */	bl GXSetTevOrder
/* 800C44F8 000C15D8  38 00 00 01 */	li r0, 0x1
/* 800C44FC 000C15DC  98 0D 83 48 */	stb r0, mFirstFrame__4iFMV@sda21(r13)
/* 800C4500 000C15E0  80 01 00 A4 */	lwz r0, 0xa4(r1)
/* 800C4504 000C15E4  83 E1 00 9C */	lwz r31, 0x9c(r1)
/* 800C4508 000C15E8  7C 08 03 A6 */	mtlr r0
/* 800C450C 000C15EC  38 21 00 A0 */	addi r1, r1, 0xa0
/* 800C4510 000C15F0  4E 80 00 20 */	blr
.endfn InitDisplay__4iFMVFP16_GXRenderModeObj

# iFMV::InitGX()
.fn InitGX__4iFMVFv, global
/* 800C4514 000C15F4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 800C4518 000C15F8  7C 08 02 A6 */	mflr r0
/* 800C451C 000C15FC  3C 60 43 30 */	lis r3, 0x4330
/* 800C4520 000C1600  90 01 00 24 */	stw r0, 0x24(r1)
/* 800C4524 000C1604  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 800C4528 000C1608  80 AD 92 00 */	lwz r5, mRenderMode__4iFMV@sda21(r13)
/* 800C452C 000C160C  C0 22 97 00 */	lfs f1, "@706"@sda21(r2)
/* 800C4530 000C1610  A0 85 00 04 */	lhz r4, 0x4(r5)
/* 800C4534 000C1614  A0 05 00 06 */	lhz r0, 0x6(r5)
/* 800C4538 000C1618  FC 40 08 90 */	fmr f2, f1
/* 800C453C 000C161C  90 81 00 0C */	stw r4, 0xc(r1)
/* 800C4540 000C1620  FC A0 08 90 */	fmr f5, f1
/* 800C4544 000C1624  C8 82 97 18 */	lfd f4, "@712"@sda21(r2)
/* 800C4548 000C1628  90 61 00 08 */	stw r3, 0x8(r1)
/* 800C454C 000C162C  C0 C2 97 04 */	lfs f6, "@707"@sda21(r2)
/* 800C4550 000C1630  C8 01 00 08 */	lfd f0, 0x8(r1)
/* 800C4554 000C1634  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C4558 000C1638  EC 60 20 28 */	fsubs f3, f0, f4
/* 800C455C 000C163C  90 61 00 10 */	stw r3, 0x10(r1)
/* 800C4560 000C1640  C8 01 00 10 */	lfd f0, 0x10(r1)
/* 800C4564 000C1644  EC 80 20 28 */	fsubs f4, f0, f4
/* 800C4568 000C1648  48 10 BA 11 */	bl GXSetViewport
/* 800C456C 000C164C  80 CD 92 00 */	lwz r6, mRenderMode__4iFMV@sda21(r13)
/* 800C4570 000C1650  38 60 00 00 */	li r3, 0x0
/* 800C4574 000C1654  38 80 00 00 */	li r4, 0x0
/* 800C4578 000C1658  A0 A6 00 04 */	lhz r5, 0x4(r6)
/* 800C457C 000C165C  A0 C6 00 06 */	lhz r6, 0x6(r6)
/* 800C4580 000C1660  48 10 BA 41 */	bl GXSetScissor
/* 800C4584 000C1664  80 8D 92 00 */	lwz r4, mRenderMode__4iFMV@sda21(r13)
/* 800C4588 000C1668  A0 64 00 06 */	lhz r3, 0x6(r4)
/* 800C458C 000C166C  A0 84 00 08 */	lhz r4, 0x8(r4)
/* 800C4590 000C1670  48 10 82 61 */	bl GXGetYScaleFactor
/* 800C4594 000C1674  48 10 84 95 */	bl GXSetDispCopyYScale
/* 800C4598 000C1678  80 CD 92 00 */	lwz r6, mRenderMode__4iFMV@sda21(r13)
/* 800C459C 000C167C  54 7F 04 3E */	clrlwi r31, r3, 16
/* 800C45A0 000C1680  38 60 00 00 */	li r3, 0x0
/* 800C45A4 000C1684  38 80 00 00 */	li r4, 0x0
/* 800C45A8 000C1688  A0 A6 00 04 */	lhz r5, 0x4(r6)
/* 800C45AC 000C168C  A0 C6 00 06 */	lhz r6, 0x6(r6)
/* 800C45B0 000C1690  48 10 7F 69 */	bl GXSetDispCopySrc
/* 800C45B4 000C1694  80 6D 92 00 */	lwz r3, mRenderMode__4iFMV@sda21(r13)
/* 800C45B8 000C1698  7F E4 FB 78 */	mr r4, r31
/* 800C45BC 000C169C  A0 63 00 04 */	lhz r3, 0x4(r3)
/* 800C45C0 000C16A0  48 10 80 51 */	bl GXSetDispCopyDst
/* 800C45C4 000C16A4  80 CD 92 00 */	lwz r6, mRenderMode__4iFMV@sda21(r13)
/* 800C45C8 000C16A8  38 A0 00 01 */	li r5, 0x1
/* 800C45CC 000C16AC  88 66 00 19 */	lbz r3, 0x19(r6)
/* 800C45D0 000C16B0  38 86 00 1A */	addi r4, r6, 0x1a
/* 800C45D4 000C16B4  38 C6 00 32 */	addi r6, r6, 0x32
/* 800C45D8 000C16B8  48 10 85 95 */	bl GXSetCopyFilter
/* 800C45DC 000C16BC  80 6D 92 00 */	lwz r3, mRenderMode__4iFMV@sda21(r13)
/* 800C45E0 000C16C0  88 03 00 19 */	lbz r0, 0x19(r3)
/* 800C45E4 000C16C4  28 00 00 00 */	cmplwi r0, 0x0
/* 800C45E8 000C16C8  41 82 00 14 */	beq .L_800C45FC
/* 800C45EC 000C16CC  38 60 00 02 */	li r3, 0x2
/* 800C45F0 000C16D0  38 80 00 00 */	li r4, 0x0
/* 800C45F4 000C16D4  48 10 B3 41 */	bl GXSetPixelFmt
/* 800C45F8 000C16D8  48 00 00 10 */	b .L_800C4608
.L_800C45FC:
/* 800C45FC 000C16DC  38 60 00 00 */	li r3, 0x0
/* 800C4600 000C16E0  38 80 00 00 */	li r4, 0x0
/* 800C4604 000C16E4  48 10 B3 31 */	bl GXSetPixelFmt
.L_800C4608:
/* 800C4608 000C16E8  80 6D 91 FC */	lwz r3, mCurrentFrameBuffer__4iFMV@sda21(r13)
/* 800C460C 000C16EC  38 80 00 01 */	li r4, 0x1
/* 800C4610 000C16F0  48 10 87 79 */	bl GXCopyDisp
/* 800C4614 000C16F4  38 60 00 00 */	li r3, 0x0
/* 800C4618 000C16F8  48 10 87 5D */	bl GXSetDispCopyGamma
/* 800C461C 000C16FC  38 60 00 00 */	li r3, 0x0
/* 800C4620 000C1700  48 10 7E 19 */	bl GXSetCullMode
/* 800C4624 000C1704  80 01 00 24 */	lwz r0, 0x24(r1)
/* 800C4628 000C1708  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 800C462C 000C170C  7C 08 03 A6 */	mtlr r0
/* 800C4630 000C1710  38 21 00 20 */	addi r1, r1, 0x20
/* 800C4634 000C1714  4E 80 00 20 */	blr
.endfn InitGX__4iFMVFv

# iFMV::InitVI()
.fn InitVI__4iFMVFv, global
/* 800C4638 000C1718  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 800C463C 000C171C  7C 08 02 A6 */	mflr r0
/* 800C4640 000C1720  90 01 00 14 */	stw r0, 0x14(r1)
/* 800C4644 000C1724  80 6D 91 F4 */	lwz r3, mXFBs__4iFMV@sda21(r13)
/* 800C4648 000C1728  48 11 81 91 */	bl VISetNextFrameBuffer
/* 800C464C 000C172C  38 6D 91 F4 */	addi r3, r13, mXFBs__4iFMV@sda21
/* 800C4650 000C1730  80 03 00 04 */	lwz r0, 0x4(r3)
/* 800C4654 000C1734  90 0D 91 FC */	stw r0, mCurrentFrameBuffer__4iFMV@sda21(r13)
/* 800C4658 000C1738  48 11 80 51 */	bl VIFlush
/* 800C465C 000C173C  48 11 73 5D */	bl VIWaitForRetrace
/* 800C4660 000C1740  80 6D 92 00 */	lwz r3, mRenderMode__4iFMV@sda21(r13)
/* 800C4664 000C1744  80 03 00 00 */	lwz r0, 0x0(r3)
/* 800C4668 000C1748  54 00 07 FF */	clrlwi. r0, r0, 31
/* 800C466C 000C174C  41 82 00 08 */	beq .L_800C4674
/* 800C4670 000C1750  48 11 73 49 */	bl VIWaitForRetrace
.L_800C4674:
/* 800C4674 000C1754  80 01 00 14 */	lwz r0, 0x14(r1)
/* 800C4678 000C1758  7C 08 03 A6 */	mtlr r0
/* 800C467C 000C175C  38 21 00 10 */	addi r1, r1, 0x10
/* 800C4680 000C1760  4E 80 00 20 */	blr
.endfn InitVI__4iFMVFv

# iFMV::Suspend()
.fn Suspend__4iFMVFv, global
/* 800C4684 000C1764  4E 80 00 20 */	blr
.endfn Suspend__4iFMVFv

# iFMV::Resume()
.fn Resume__4iFMVFv, global
/* 800C4688 000C1768  4E 80 00 20 */	blr
.endfn Resume__4iFMVFv

# xDrawLine2D_LocaliFMVVersion(float, float, float, float)
.fn xDrawLine2D_LocaliFMVVersion__Fffff, local
/* 800C468C 000C176C  94 21 FF 90 */	stwu r1, -0x70(r1)
/* 800C4690 000C1770  7C 08 02 A6 */	mflr r0
/* 800C4694 000C1774  90 01 00 74 */	stw r0, 0x74(r1)
/* 800C4698 000C1778  39 61 00 70 */	addi r11, r1, 0x70
/* 800C469C 000C177C  48 12 8D D1 */	bl _savefpr_27
/* 800C46A0 000C1780  80 02 97 28 */	lwz r0, "@956"@sda21(r2)
/* 800C46A4 000C1784  FF 60 08 90 */	fmr f27, f1
/* 800C46A8 000C1788  FF 80 10 90 */	fmr f28, f2
/* 800C46AC 000C178C  FF A0 18 90 */	fmr f29, f3
/* 800C46B0 000C1790  90 01 00 10 */	stw r0, 0x10(r1)
/* 800C46B4 000C1794  FF C0 20 90 */	fmr f30, f4
/* 800C46B8 000C1798  48 16 B1 0D */	bl RwIm2DGetNearScreenZ
/* 800C46BC 000C179C  FF E0 08 90 */	fmr f31, f1
/* 800C46C0 000C17A0  38 81 00 0C */	addi r4, r1, 0xc
/* 800C46C4 000C17A4  38 60 00 01 */	li r3, 0x1
/* 800C46C8 000C17A8  48 16 B1 75 */	bl RwRenderStateGet
/* 800C46CC 000C17AC  38 81 00 08 */	addi r4, r1, 0x8
/* 800C46D0 000C17B0  38 60 00 0C */	li r3, 0xc
/* 800C46D4 000C17B4  48 16 B1 69 */	bl RwRenderStateGet
/* 800C46D8 000C17B8  88 E1 00 10 */	lbz r7, 0x10(r1)
/* 800C46DC 000C17BC  38 60 00 01 */	li r3, 0x1
/* 800C46E0 000C17C0  88 C1 00 11 */	lbz r6, 0x11(r1)
/* 800C46E4 000C17C4  38 80 00 00 */	li r4, 0x0
/* 800C46E8 000C17C8  88 A1 00 12 */	lbz r5, 0x12(r1)
/* 800C46EC 000C17CC  88 01 00 13 */	lbz r0, 0x13(r1)
/* 800C46F0 000C17D0  D3 61 00 14 */	stfs f27, 0x14(r1)
/* 800C46F4 000C17D4  D3 81 00 18 */	stfs f28, 0x18(r1)
/* 800C46F8 000C17D8  D3 E1 00 1C */	stfs f31, 0x1c(r1)
/* 800C46FC 000C17DC  98 E1 00 20 */	stb r7, 0x20(r1)
/* 800C4700 000C17E0  98 C1 00 21 */	stb r6, 0x21(r1)
/* 800C4704 000C17E4  98 A1 00 22 */	stb r5, 0x22(r1)
/* 800C4708 000C17E8  98 01 00 23 */	stb r0, 0x23(r1)
/* 800C470C 000C17EC  D3 A1 00 2C */	stfs f29, 0x2c(r1)
/* 800C4710 000C17F0  D3 C1 00 30 */	stfs f30, 0x30(r1)
/* 800C4714 000C17F4  D3 E1 00 34 */	stfs f31, 0x34(r1)
/* 800C4718 000C17F8  98 E1 00 38 */	stb r7, 0x38(r1)
/* 800C471C 000C17FC  98 C1 00 39 */	stb r6, 0x39(r1)
/* 800C4720 000C1800  98 A1 00 3A */	stb r5, 0x3a(r1)
/* 800C4724 000C1804  98 01 00 3B */	stb r0, 0x3b(r1)
/* 800C4728 000C1808  48 16 B0 B5 */	bl RwRenderStateSet
/* 800C472C 000C180C  38 60 00 0C */	li r3, 0xc
/* 800C4730 000C1810  38 80 00 00 */	li r4, 0x0
/* 800C4734 000C1814  48 16 B0 A9 */	bl RwRenderStateSet
/* 800C4738 000C1818  38 61 00 14 */	addi r3, r1, 0x14
/* 800C473C 000C181C  38 80 00 02 */	li r4, 0x2
/* 800C4740 000C1820  38 A0 00 00 */	li r5, 0x0
/* 800C4744 000C1824  38 C0 00 01 */	li r6, 0x1
/* 800C4748 000C1828  48 16 B1 21 */	bl RwIm2DRenderLine
/* 800C474C 000C182C  80 81 00 0C */	lwz r4, 0xc(r1)
/* 800C4750 000C1830  38 60 00 01 */	li r3, 0x1
/* 800C4754 000C1834  48 16 B0 89 */	bl RwRenderStateSet
/* 800C4758 000C1838  80 81 00 08 */	lwz r4, 0x8(r1)
/* 800C475C 000C183C  38 60 00 0C */	li r3, 0xc
/* 800C4760 000C1840  48 16 B0 7D */	bl RwRenderStateSet
/* 800C4764 000C1844  39 61 00 70 */	addi r11, r1, 0x70
/* 800C4768 000C1848  48 12 8D 51 */	bl _restfpr_27
/* 800C476C 000C184C  80 01 00 74 */	lwz r0, 0x74(r1)
/* 800C4770 000C1850  7C 08 03 A6 */	mtlr r0
/* 800C4774 000C1854  38 21 00 70 */	addi r1, r1, 0x70
/* 800C4778 000C1858  4E 80 00 20 */	blr
.endfn xDrawLine2D_LocaliFMVVersion__Fffff

# 0x802FBE80 - 0x802FBE98
.section .bss, "wa", @nobits
.balign 8

.obj Bink_surface_type, local
	.skip 0x14
.endobj Bink_surface_type
	.skip 0x4

# 0x803CAC40 - 0x803CAC50
.section .sdata, "wa"
.balign 8

.obj Width_scale, local
	.4byte 0x3F800000
.endobj Width_scale

.obj Height_scale, local
	.4byte 0x3F800000
.endobj Height_scale

# iFMV::mFirstFrame
.obj mFirstFrame__4iFMV, global
	.byte 0x01
.endobj mFirstFrame__4iFMV
	.4byte 0x00000000
	.byte 0x00, 0x00, 0x00

# 0x803CBAD0 - 0x803CBB08
.section .sbss, "wa", @nobits
.balign 8

.obj frame_num, local
	.skip 0x4
.endobj frame_num

.obj fuckingSurfaceType, global
	.skip 0x4
.endobj fuckingSurfaceType

.obj Bink, local
	.skip 0x4
.endobj Bink

.obj Image, local
	.skip 0x4
.endobj Image

.obj Paused, local
	.skip 0x4
.endobj Paused

.obj pixels, local
	.skip 0x4
.endobj pixels

.obj vol, local
	.skip 0x4
.endobj vol

.obj ip, global
	.skip 0x4
.endobj ip

.obj oof, global
	.skip 0x4
.endobj oof

# iFMV::mXFBs
.obj mXFBs__4iFMV, global
	.skip 0x8
.endobj mXFBs__4iFMV

# iFMV::mCurrentFrameBuffer
.obj mCurrentFrameBuffer__4iFMV, global
	.skip 0x4
.endobj mCurrentFrameBuffer__4iFMV

# iFMV::mRenderMode
.obj mRenderMode__4iFMV, global
	.skip 0x4
.endobj mRenderMode__4iFMV
	.skip 0x4

# 0x803CE080 - 0x803CE0B0
.section .sdata2, "a"
.balign 8

.obj "@706", local
	.4byte 0x00000000
.endobj "@706"

.obj "@707", local
	.4byte 0x3F800000
.endobj "@707"

.obj "@708", local
	.4byte 0x43F00000
.endobj "@708"

.obj "@709", local
	.4byte 0x44200000
.endobj "@709"

.obj "@710", local
	.4byte 0x461C4000
.endobj "@710"
	.4byte 0x00000000

.obj "@712", local
	.4byte 0x43300000
	.4byte 0x00000000
.endobj "@712"

.obj "@842", local
	.4byte 0x47000000
.endobj "@842"

.obj "@887", local
	.4byte 0xC2C80000
.endobj "@887"

.obj "@956", local
	.4byte 0xFFFFFFFF
.endobj "@956"
	.4byte 0x00000000

# 0x803D0898 - 0x803D08A0
.section .sbss2, "a", @nobits
.balign 8

.obj "@721", local
	.skip 0x4
.endobj "@721"

.obj "@880", local
	.skip 0x4
.endobj "@880"
