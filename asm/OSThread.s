.include "macros.inc"
.file "OSThread.c"

# 0x801D660C - 0x801D754C
.text
.balign 4

.fn DefaultSwitchThreadCallback, local
/* 801D660C 001D36EC  4E 80 00 20 */	blr
.endfn DefaultSwitchThreadCallback

.fn __OSThreadInit, global
/* 801D6610 001D36F0  7C 08 02 A6 */	mflr r0
/* 801D6614 001D36F4  3C 60 80 38 */	lis r3, ...bss.0@ha
/* 801D6618 001D36F8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D661C 001D36FC  38 00 00 02 */	li r0, 0x2
/* 801D6620 001D3700  38 80 00 10 */	li r4, 0x10
/* 801D6624 001D3704  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D6628 001D3708  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D662C 001D370C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801D6630 001D3710  93 A1 00 0C */	stw r29, 0xc(r1)
/* 801D6634 001D3714  3B A0 00 00 */	li r29, 0x0
/* 801D6638 001D3718  93 81 00 08 */	stw r28, 0x8(r1)
/* 801D663C 001D371C  3B 83 E0 D8 */	addi r28, r3, ...bss.0@l
/* 801D6640 001D3720  3B FC 04 18 */	addi r31, r28, 0x418
/* 801D6644 001D3724  B0 1C 06 E0 */	sth r0, 0x6e0(r28)
/* 801D6648 001D3728  38 00 00 01 */	li r0, 0x1
/* 801D664C 001D372C  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 801D6650 001D3730  B0 1C 06 E2 */	sth r0, 0x6e2(r28)
/* 801D6654 001D3734  38 00 FF FF */	li r0, -0x1
/* 801D6658 001D3738  90 9C 06 EC */	stw r4, 0x6ec(r28)
/* 801D665C 001D373C  90 9C 06 E8 */	stw r4, 0x6e8(r28)
/* 801D6660 001D3740  93 BC 06 E4 */	stw r29, 0x6e4(r28)
/* 801D6664 001D3744  90 1C 06 F0 */	stw r0, 0x6f0(r28)
/* 801D6668 001D3748  93 BC 07 08 */	stw r29, 0x708(r28)
/* 801D666C 001D374C  48 00 00 FD */	bl OSInitThreadQueue
/* 801D6670 001D3750  93 BC 07 10 */	stw r29, 0x710(r28)
/* 801D6674 001D3754  3F C0 80 00 */	lis r30, 0x8000
/* 801D6678 001D3758  38 7F 00 00 */	addi r3, r31, 0x0
/* 801D667C 001D375C  93 BC 07 0C */	stw r29, 0x70c(r28)
/* 801D6680 001D3760  93 FE 00 D8 */	stw r31, 0xd8(r30)
/* 801D6684 001D3764  4B FF C4 E9 */	bl OSClearContext
/* 801D6688 001D3768  7F E3 FB 78 */	mr r3, r31
/* 801D668C 001D376C  4B FF C3 19 */	bl OSSetCurrentContext
/* 801D6690 001D3770  3C 60 80 3E */	lis r3, _stack_addr@ha
/* 801D6694 001D3774  38 03 8A 50 */	addi r0, r3, _stack_addr@l
/* 801D6698 001D3778  3C 60 80 3D */	lis r3, _stack_end@ha
/* 801D669C 001D377C  90 1C 07 1C */	stw r0, 0x71c(r28)
/* 801D66A0 001D3780  38 03 0A 50 */	addi r0, r3, _stack_end@l
/* 801D66A4 001D3784  90 1C 07 20 */	stw r0, 0x720(r28)
/* 801D66A8 001D3788  3C 60 DE AE */	lis r3, 0xdeae
/* 801D66AC 001D378C  38 03 BA BE */	addi r0, r3, -0x4542
/* 801D66B0 001D3790  80 7C 07 20 */	lwz r3, 0x720(r28)
/* 801D66B4 001D3794  7F E4 FB 78 */	mr r4, r31
/* 801D66B8 001D3798  90 03 00 00 */	stw r0, 0x0(r3)
/* 801D66BC 001D379C  81 8D 86 60 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 801D66C0 001D37A0  80 7E 00 E4 */	lwz r3, 0xe4(r30)
/* 801D66C4 001D37A4  7D 88 03 A6 */	mtlr r12
/* 801D66C8 001D37A8  4E 80 00 21 */	blrl
/* 801D66CC 001D37AC  93 FE 00 E4 */	stw r31, 0xe4(r30)
/* 801D66D0 001D37B0  38 60 00 00 */	li r3, 0x0
/* 801D66D4 001D37B4  48 00 0D CD */	bl OSClearStack
/* 801D66D8 001D37B8  93 AD 9C C8 */	stw r29, RunQueueBits@sda21(r13)
/* 801D66DC 001D37BC  3B C0 00 00 */	li r30, 0x0
/* 801D66E0 001D37C0  57 C0 18 38 */	slwi r0, r30, 3
/* 801D66E4 001D37C4  93 AD 9C CC */	stw r29, RunQueueHint@sda21(r13)
/* 801D66E8 001D37C8  7F BC 02 14 */	add r29, r28, r0
.L_801D66EC:
/* 801D66EC 001D37CC  7F A3 EB 78 */	mr r3, r29
/* 801D66F0 001D37D0  48 00 00 79 */	bl OSInitThreadQueue
/* 801D66F4 001D37D4  3B DE 00 01 */	addi r30, r30, 0x1
/* 801D66F8 001D37D8  2C 1E 00 1F */	cmpwi r30, 0x1f
/* 801D66FC 001D37DC  3B BD 00 08 */	addi r29, r29, 0x8
/* 801D6700 001D37E0  40 81 FF EC */	ble .L_801D66EC
/* 801D6704 001D37E4  3F C0 80 00 */	lis r30, 0x8000
/* 801D6708 001D37E8  38 7E 00 DC */	addi r3, r30, 0xdc
/* 801D670C 001D37EC  48 00 00 5D */	bl OSInitThreadQueue
/* 801D6710 001D37F0  38 9E 00 DC */	addi r4, r30, 0xdc
/* 801D6714 001D37F4  84 64 00 04 */	lwzu r3, 0x4(r4)
/* 801D6718 001D37F8  28 03 00 00 */	cmplwi r3, 0x0
/* 801D671C 001D37FC  40 82 00 0C */	bne .L_801D6728
/* 801D6720 001D3800  93 FE 00 DC */	stw r31, 0xdc(r30)
/* 801D6724 001D3804  48 00 00 08 */	b .L_801D672C
.L_801D6728:
/* 801D6728 001D3808  93 E3 02 FC */	stw r31, 0x2fc(r3)
.L_801D672C:
/* 801D672C 001D380C  90 7F 03 00 */	stw r3, 0x300(r31)
/* 801D6730 001D3810  3B C0 00 00 */	li r30, 0x0
/* 801D6734 001D3814  38 7C 07 30 */	addi r3, r28, 0x730
/* 801D6738 001D3818  93 DF 02 FC */	stw r30, 0x2fc(r31)
/* 801D673C 001D381C  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801D6740 001D3820  4B FF C4 2D */	bl OSClearContext
/* 801D6744 001D3824  93 CD 9C D0 */	stw r30, Reschedule@sda21(r13)
/* 801D6748 001D3828  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D674C 001D382C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D6750 001D3830  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801D6754 001D3834  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 801D6758 001D3838  83 81 00 08 */	lwz r28, 0x8(r1)
/* 801D675C 001D383C  38 21 00 18 */	addi r1, r1, 0x18
/* 801D6760 001D3840  7C 08 03 A6 */	mtlr r0
/* 801D6764 001D3844  4E 80 00 20 */	blr
.endfn __OSThreadInit

.fn OSInitThreadQueue, global
/* 801D6768 001D3848  38 00 00 00 */	li r0, 0x0
/* 801D676C 001D384C  90 03 00 04 */	stw r0, 0x4(r3)
/* 801D6770 001D3850  90 03 00 00 */	stw r0, 0x0(r3)
/* 801D6774 001D3854  4E 80 00 20 */	blr
.endfn OSInitThreadQueue

.fn OSGetCurrentThread, global
/* 801D6778 001D3858  3C 60 80 00 */	lis r3, 0x8000
/* 801D677C 001D385C  80 63 00 E4 */	lwz r3, 0xe4(r3)
/* 801D6780 001D3860  4E 80 00 20 */	blr
.endfn OSGetCurrentThread

.fn OSDisableScheduler, global
/* 801D6784 001D3864  7C 08 02 A6 */	mflr r0
/* 801D6788 001D3868  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D678C 001D386C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801D6790 001D3870  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801D6794 001D3874  4B FF DB 7D */	bl OSDisableInterrupts
/* 801D6798 001D3878  80 8D 9C D0 */	lwz r4, Reschedule@sda21(r13)
/* 801D679C 001D387C  38 04 00 01 */	addi r0, r4, 0x1
/* 801D67A0 001D3880  90 0D 9C D0 */	stw r0, Reschedule@sda21(r13)
/* 801D67A4 001D3884  7C 9F 23 78 */	mr r31, r4
/* 801D67A8 001D3888  4B FF DB 91 */	bl OSRestoreInterrupts
/* 801D67AC 001D388C  7F E3 FB 78 */	mr r3, r31
/* 801D67B0 001D3890  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801D67B4 001D3894  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801D67B8 001D3898  38 21 00 10 */	addi r1, r1, 0x10
/* 801D67BC 001D389C  7C 08 03 A6 */	mtlr r0
/* 801D67C0 001D38A0  4E 80 00 20 */	blr
.endfn OSDisableScheduler

.fn OSEnableScheduler, global
/* 801D67C4 001D38A4  7C 08 02 A6 */	mflr r0
/* 801D67C8 001D38A8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D67CC 001D38AC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801D67D0 001D38B0  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801D67D4 001D38B4  4B FF DB 3D */	bl OSDisableInterrupts
/* 801D67D8 001D38B8  80 8D 9C D0 */	lwz r4, Reschedule@sda21(r13)
/* 801D67DC 001D38BC  38 04 FF FF */	addi r0, r4, -0x1
/* 801D67E0 001D38C0  90 0D 9C D0 */	stw r0, Reschedule@sda21(r13)
/* 801D67E4 001D38C4  7C 9F 23 78 */	mr r31, r4
/* 801D67E8 001D38C8  4B FF DB 51 */	bl OSRestoreInterrupts
/* 801D67EC 001D38CC  7F E3 FB 78 */	mr r3, r31
/* 801D67F0 001D38D0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801D67F4 001D38D4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801D67F8 001D38D8  38 21 00 10 */	addi r1, r1, 0x10
/* 801D67FC 001D38DC  7C 08 03 A6 */	mtlr r0
/* 801D6800 001D38E0  4E 80 00 20 */	blr
.endfn OSEnableScheduler

.fn UnsetRun, local
/* 801D6804 001D38E4  80 83 02 E0 */	lwz r4, 0x2e0(r3)
/* 801D6808 001D38E8  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 801D680C 001D38EC  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6810 001D38F0  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 801D6814 001D38F4  40 82 00 0C */	bne .L_801D6820
/* 801D6818 001D38F8  90 C5 00 04 */	stw r6, 0x4(r5)
/* 801D681C 001D38FC  48 00 00 08 */	b .L_801D6824
.L_801D6820:
/* 801D6820 001D3900  90 C4 02 E4 */	stw r6, 0x2e4(r4)
.L_801D6824:
/* 801D6824 001D3904  28 06 00 00 */	cmplwi r6, 0x0
/* 801D6828 001D3908  40 82 00 0C */	bne .L_801D6834
/* 801D682C 001D390C  90 85 00 00 */	stw r4, 0x0(r5)
/* 801D6830 001D3910  48 00 00 08 */	b .L_801D6838
.L_801D6834:
/* 801D6834 001D3914  90 86 02 E0 */	stw r4, 0x2e0(r6)
.L_801D6838:
/* 801D6838 001D3918  80 05 00 00 */	lwz r0, 0x0(r5)
/* 801D683C 001D391C  28 00 00 00 */	cmplwi r0, 0x0
/* 801D6840 001D3920  40 82 00 20 */	bne .L_801D6860
/* 801D6844 001D3924  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 801D6848 001D3928  38 80 00 01 */	li r4, 0x1
/* 801D684C 001D392C  80 AD 9C C8 */	lwz r5, RunQueueBits@sda21(r13)
/* 801D6850 001D3930  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801D6854 001D3934  7C 80 00 30 */	slw r0, r4, r0
/* 801D6858 001D3938  7C A0 00 78 */	andc r0, r5, r0
/* 801D685C 001D393C  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
.L_801D6860:
/* 801D6860 001D3940  38 00 00 00 */	li r0, 0x0
/* 801D6864 001D3944  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 801D6868 001D3948  4E 80 00 20 */	blr
.endfn UnsetRun

.fn __OSGetEffectivePriority, global
/* 801D686C 001D394C  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 801D6870 001D3950  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 801D6874 001D3954  48 00 00 24 */	b .L_801D6898
.L_801D6878:
/* 801D6878 001D3958  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801D687C 001D395C  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6880 001D3960  41 82 00 14 */	beq .L_801D6894
/* 801D6884 001D3964  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 801D6888 001D3968  7C 00 20 00 */	cmpw r0, r4
/* 801D688C 001D396C  40 80 00 08 */	bge .L_801D6894
/* 801D6890 001D3970  7C 04 03 78 */	mr r4, r0
.L_801D6894:
/* 801D6894 001D3974  80 A5 00 10 */	lwz r5, 0x10(r5)
.L_801D6898:
/* 801D6898 001D3978  28 05 00 00 */	cmplwi r5, 0x0
/* 801D689C 001D397C  40 82 FF DC */	bne .L_801D6878
/* 801D68A0 001D3980  7C 83 23 78 */	mr r3, r4
/* 801D68A4 001D3984  4E 80 00 20 */	blr
.endfn __OSGetEffectivePriority

.fn SetEffectivePriority, local
/* 801D68A8 001D3988  7C 08 02 A6 */	mflr r0
/* 801D68AC 001D398C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D68B0 001D3990  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D68B4 001D3994  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D68B8 001D3998  7C 7F 1B 78 */	mr r31, r3
/* 801D68BC 001D399C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801D68C0 001D39A0  3B C4 00 00 */	addi r30, r4, 0x0
/* 801D68C4 001D39A4  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 801D68C8 001D39A8  2C 00 00 03 */	cmpwi r0, 0x3
/* 801D68CC 001D39AC  41 82 01 80 */	beq .L_801D6A4C
/* 801D68D0 001D39B0  40 80 00 14 */	bge .L_801D68E4
/* 801D68D4 001D39B4  2C 00 00 01 */	cmpwi r0, 0x1
/* 801D68D8 001D39B8  41 82 00 18 */	beq .L_801D68F0
/* 801D68DC 001D39BC  40 80 01 64 */	bge .L_801D6A40
/* 801D68E0 001D39C0  48 00 01 6C */	b .L_801D6A4C
.L_801D68E4:
/* 801D68E4 001D39C4  2C 00 00 05 */	cmpwi r0, 0x5
/* 801D68E8 001D39C8  40 80 01 64 */	bge .L_801D6A4C
/* 801D68EC 001D39CC  48 00 00 7C */	b .L_801D6968
.L_801D68F0:
/* 801D68F0 001D39D0  7F E3 FB 78 */	mr r3, r31
/* 801D68F4 001D39D4  4B FF FF 11 */	bl UnsetRun
/* 801D68F8 001D39D8  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 801D68FC 001D39DC  3C 60 80 38 */	lis r3, RunQueue@ha
/* 801D6900 001D39E0  38 03 E0 D8 */	addi r0, r3, RunQueue@l
/* 801D6904 001D39E4  80 7F 02 D0 */	lwz r3, 0x2d0(r31)
/* 801D6908 001D39E8  54 63 18 38 */	slwi r3, r3, 3
/* 801D690C 001D39EC  7C 00 1A 14 */	add r0, r0, r3
/* 801D6910 001D39F0  90 1F 02 DC */	stw r0, 0x2dc(r31)
/* 801D6914 001D39F4  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801D6918 001D39F8  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D691C 001D39FC  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6920 001D3A00  40 82 00 0C */	bne .L_801D692C
/* 801D6924 001D3A04  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801D6928 001D3A08  48 00 00 08 */	b .L_801D6930
.L_801D692C:
/* 801D692C 001D3A0C  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_801D6930:
/* 801D6930 001D3A10  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801D6934 001D3A14  38 00 00 00 */	li r0, 0x0
/* 801D6938 001D3A18  38 60 00 01 */	li r3, 0x1
/* 801D693C 001D3A1C  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 801D6940 001D3A20  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801D6944 001D3A24  93 E4 00 04 */	stw r31, 0x4(r4)
/* 801D6948 001D3A28  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 801D694C 001D3A2C  80 8D 9C C8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801D6950 001D3A30  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801D6954 001D3A34  7C 60 00 30 */	slw r0, r3, r0
/* 801D6958 001D3A38  7C 80 03 78 */	or r0, r4, r0
/* 801D695C 001D3A3C  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
/* 801D6960 001D3A40  90 6D 9C CC */	stw r3, RunQueueHint@sda21(r13)
/* 801D6964 001D3A44  48 00 00 E8 */	b .L_801D6A4C
.L_801D6968:
/* 801D6968 001D3A48  80 9F 02 E0 */	lwz r4, 0x2e0(r31)
/* 801D696C 001D3A4C  80 BF 02 E4 */	lwz r5, 0x2e4(r31)
/* 801D6970 001D3A50  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6974 001D3A54  40 82 00 10 */	bne .L_801D6984
/* 801D6978 001D3A58  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801D697C 001D3A5C  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801D6980 001D3A60  48 00 00 08 */	b .L_801D6988
.L_801D6984:
/* 801D6984 001D3A64  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_801D6988:
/* 801D6988 001D3A68  28 05 00 00 */	cmplwi r5, 0x0
/* 801D698C 001D3A6C  40 82 00 10 */	bne .L_801D699C
/* 801D6990 001D3A70  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801D6994 001D3A74  90 83 00 00 */	stw r4, 0x0(r3)
/* 801D6998 001D3A78  48 00 00 08 */	b .L_801D69A0
.L_801D699C:
/* 801D699C 001D3A7C  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_801D69A0:
/* 801D69A0 001D3A80  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 801D69A4 001D3A84  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801D69A8 001D3A88  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801D69AC 001D3A8C  48 00 00 08 */	b .L_801D69B4
.L_801D69B0:
/* 801D69B0 001D3A90  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_801D69B4:
/* 801D69B4 001D3A94  28 05 00 00 */	cmplwi r5, 0x0
/* 801D69B8 001D3A98  41 82 00 14 */	beq .L_801D69CC
/* 801D69BC 001D3A9C  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801D69C0 001D3AA0  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 801D69C4 001D3AA4  7C 03 00 00 */	cmpw r3, r0
/* 801D69C8 001D3AA8  40 81 FF E8 */	ble .L_801D69B0
.L_801D69CC:
/* 801D69CC 001D3AAC  28 05 00 00 */	cmplwi r5, 0x0
/* 801D69D0 001D3AB0  40 82 00 34 */	bne .L_801D6A04
/* 801D69D4 001D3AB4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D69D8 001D3AB8  28 03 00 00 */	cmplwi r3, 0x0
/* 801D69DC 001D3ABC  40 82 00 0C */	bne .L_801D69E8
/* 801D69E0 001D3AC0  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801D69E4 001D3AC4  48 00 00 08 */	b .L_801D69EC
.L_801D69E8:
/* 801D69E8 001D3AC8  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_801D69EC:
/* 801D69EC 001D3ACC  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801D69F0 001D3AD0  38 00 00 00 */	li r0, 0x0
/* 801D69F4 001D3AD4  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 801D69F8 001D3AD8  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801D69FC 001D3ADC  93 E3 00 04 */	stw r31, 0x4(r3)
/* 801D6A00 001D3AE0  48 00 00 2C */	b .L_801D6A2C
.L_801D6A04:
/* 801D6A04 001D3AE4  90 BF 02 E0 */	stw r5, 0x2e0(r31)
/* 801D6A08 001D3AE8  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801D6A0C 001D3AEC  93 E5 02 E4 */	stw r31, 0x2e4(r5)
/* 801D6A10 001D3AF0  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6A14 001D3AF4  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801D6A18 001D3AF8  40 82 00 10 */	bne .L_801D6A28
/* 801D6A1C 001D3AFC  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801D6A20 001D3B00  93 E3 00 00 */	stw r31, 0x0(r3)
/* 801D6A24 001D3B04  48 00 00 08 */	b .L_801D6A2C
.L_801D6A28:
/* 801D6A28 001D3B08  93 E3 02 E0 */	stw r31, 0x2e0(r3)
.L_801D6A2C:
/* 801D6A2C 001D3B0C  80 7F 02 F0 */	lwz r3, 0x2f0(r31)
/* 801D6A30 001D3B10  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6A34 001D3B14  41 82 00 18 */	beq .L_801D6A4C
/* 801D6A38 001D3B18  80 63 00 08 */	lwz r3, 0x8(r3)
/* 801D6A3C 001D3B1C  48 00 00 14 */	b .L_801D6A50
.L_801D6A40:
/* 801D6A40 001D3B20  38 00 00 01 */	li r0, 0x1
/* 801D6A44 001D3B24  90 0D 9C CC */	stw r0, RunQueueHint@sda21(r13)
/* 801D6A48 001D3B28  93 DF 02 D0 */	stw r30, 0x2d0(r31)
.L_801D6A4C:
/* 801D6A4C 001D3B2C  38 60 00 00 */	li r3, 0x0
.L_801D6A50:
/* 801D6A50 001D3B30  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D6A54 001D3B34  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D6A58 001D3B38  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801D6A5C 001D3B3C  38 21 00 18 */	addi r1, r1, 0x18
/* 801D6A60 001D3B40  7C 08 03 A6 */	mtlr r0
/* 801D6A64 001D3B44  4E 80 00 20 */	blr
.endfn SetEffectivePriority

.fn SelectThread, local
/* 801D6A68 001D3B48  7C 08 02 A6 */	mflr r0
/* 801D6A6C 001D3B4C  3C 80 80 38 */	lis r4, ...bss.0@ha
/* 801D6A70 001D3B50  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D6A74 001D3B54  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D6A78 001D3B58  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D6A7C 001D3B5C  3B E4 E0 D8 */	addi r31, r4, ...bss.0@l
/* 801D6A80 001D3B60  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801D6A84 001D3B64  3B C3 00 00 */	addi r30, r3, 0x0
/* 801D6A88 001D3B68  80 0D 9C D0 */	lwz r0, Reschedule@sda21(r13)
/* 801D6A8C 001D3B6C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6A90 001D3B70  40 81 00 0C */	ble .L_801D6A9C
/* 801D6A94 001D3B74  38 60 00 00 */	li r3, 0x0
/* 801D6A98 001D3B78  48 00 01 E0 */	b .L_801D6C78
.L_801D6A9C:
/* 801D6A9C 001D3B7C  4B FF BF 65 */	bl OSGetCurrentContext
/* 801D6AA0 001D3B80  3C 80 80 00 */	lis r4, 0x8000
/* 801D6AA4 001D3B84  80 C4 00 E4 */	lwz r6, 0xe4(r4)
/* 801D6AA8 001D3B88  7C 03 30 40 */	cmplw r3, r6
/* 801D6AAC 001D3B8C  38 66 00 00 */	addi r3, r6, 0x0
/* 801D6AB0 001D3B90  41 82 00 0C */	beq .L_801D6ABC
/* 801D6AB4 001D3B94  38 60 00 00 */	li r3, 0x0
/* 801D6AB8 001D3B98  48 00 01 C0 */	b .L_801D6C78
.L_801D6ABC:
/* 801D6ABC 001D3B9C  28 06 00 00 */	cmplwi r6, 0x0
/* 801D6AC0 001D3BA0  41 82 00 BC */	beq .L_801D6B7C
/* 801D6AC4 001D3BA4  A0 06 02 C8 */	lhz r0, 0x2c8(r6)
/* 801D6AC8 001D3BA8  28 00 00 02 */	cmplwi r0, 0x2
/* 801D6ACC 001D3BAC  40 82 00 90 */	bne .L_801D6B5C
/* 801D6AD0 001D3BB0  2C 1E 00 00 */	cmpwi r30, 0x0
/* 801D6AD4 001D3BB4  40 82 00 20 */	bne .L_801D6AF4
/* 801D6AD8 001D3BB8  80 8D 9C C8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801D6ADC 001D3BBC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801D6AE0 001D3BC0  7C 84 00 34 */	cntlzw r4, r4
/* 801D6AE4 001D3BC4  7C 00 20 00 */	cmpw r0, r4
/* 801D6AE8 001D3BC8  41 81 00 0C */	bgt .L_801D6AF4
/* 801D6AEC 001D3BCC  38 60 00 00 */	li r3, 0x0
/* 801D6AF0 001D3BD0  48 00 01 88 */	b .L_801D6C78
.L_801D6AF4:
/* 801D6AF4 001D3BD4  38 00 00 01 */	li r0, 0x1
/* 801D6AF8 001D3BD8  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 801D6AFC 001D3BDC  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801D6B00 001D3BE0  54 00 18 38 */	slwi r0, r0, 3
/* 801D6B04 001D3BE4  7C 1F 02 14 */	add r0, r31, r0
/* 801D6B08 001D3BE8  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 801D6B0C 001D3BEC  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 801D6B10 001D3BF0  80 85 00 04 */	lwz r4, 0x4(r5)
/* 801D6B14 001D3BF4  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6B18 001D3BF8  40 82 00 0C */	bne .L_801D6B24
/* 801D6B1C 001D3BFC  90 C5 00 00 */	stw r6, 0x0(r5)
/* 801D6B20 001D3C00  48 00 00 08 */	b .L_801D6B28
.L_801D6B24:
/* 801D6B24 001D3C04  90 C4 02 E0 */	stw r6, 0x2e0(r4)
.L_801D6B28:
/* 801D6B28 001D3C08  90 86 02 E4 */	stw r4, 0x2e4(r6)
/* 801D6B2C 001D3C0C  38 00 00 00 */	li r0, 0x0
/* 801D6B30 001D3C10  38 80 00 01 */	li r4, 0x1
/* 801D6B34 001D3C14  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 801D6B38 001D3C18  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 801D6B3C 001D3C1C  90 C5 00 04 */	stw r6, 0x4(r5)
/* 801D6B40 001D3C20  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801D6B44 001D3C24  80 AD 9C C8 */	lwz r5, RunQueueBits@sda21(r13)
/* 801D6B48 001D3C28  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801D6B4C 001D3C2C  7C 80 00 30 */	slw r0, r4, r0
/* 801D6B50 001D3C30  7C A0 03 78 */	or r0, r5, r0
/* 801D6B54 001D3C34  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
/* 801D6B58 001D3C38  90 8D 9C CC */	stw r4, RunQueueHint@sda21(r13)
.L_801D6B5C:
/* 801D6B5C 001D3C3C  A0 06 01 A2 */	lhz r0, 0x1a2(r6)
/* 801D6B60 001D3C40  54 00 07 BD */	rlwinm. r0, r0, 0, 30, 30
/* 801D6B64 001D3C44  40 82 00 18 */	bne .L_801D6B7C
/* 801D6B68 001D3C48  4B FF BE A5 */	bl OSSaveContext
/* 801D6B6C 001D3C4C  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6B70 001D3C50  41 82 00 0C */	beq .L_801D6B7C
/* 801D6B74 001D3C54  38 60 00 00 */	li r3, 0x0
/* 801D6B78 001D3C58  48 00 01 00 */	b .L_801D6C78
.L_801D6B7C:
/* 801D6B7C 001D3C5C  80 0D 9C C8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801D6B80 001D3C60  28 00 00 00 */	cmplwi r0, 0x0
/* 801D6B84 001D3C64  40 82 00 54 */	bne .L_801D6BD8
/* 801D6B88 001D3C68  81 8D 86 60 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 801D6B8C 001D3C6C  3F C0 80 00 */	lis r30, 0x8000
/* 801D6B90 001D3C70  80 7E 00 E4 */	lwz r3, 0xe4(r30)
/* 801D6B94 001D3C74  38 80 00 00 */	li r4, 0x0
/* 801D6B98 001D3C78  7D 88 03 A6 */	mtlr r12
/* 801D6B9C 001D3C7C  4E 80 00 21 */	blrl
/* 801D6BA0 001D3C80  38 00 00 00 */	li r0, 0x0
/* 801D6BA4 001D3C84  90 1E 00 E4 */	stw r0, 0xe4(r30)
/* 801D6BA8 001D3C88  38 7F 07 30 */	addi r3, r31, 0x730
/* 801D6BAC 001D3C8C  4B FF BD F9 */	bl OSSetCurrentContext
.L_801D6BB0:
/* 801D6BB0 001D3C90  4B FF D7 75 */	bl OSEnableInterrupts
.L_801D6BB4:
/* 801D6BB4 001D3C94  80 0D 9C C8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801D6BB8 001D3C98  28 00 00 00 */	cmplwi r0, 0x0
/* 801D6BBC 001D3C9C  41 82 FF F8 */	beq .L_801D6BB4
/* 801D6BC0 001D3CA0  4B FF D7 51 */	bl OSDisableInterrupts
/* 801D6BC4 001D3CA4  80 0D 9C C8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801D6BC8 001D3CA8  28 00 00 00 */	cmplwi r0, 0x0
/* 801D6BCC 001D3CAC  41 82 FF E4 */	beq .L_801D6BB0
/* 801D6BD0 001D3CB0  38 7F 07 30 */	addi r3, r31, 0x730
/* 801D6BD4 001D3CB4  4B FF BF 99 */	bl OSClearContext
.L_801D6BD8:
/* 801D6BD8 001D3CB8  38 60 00 00 */	li r3, 0x0
/* 801D6BDC 001D3CBC  90 6D 9C CC */	stw r3, RunQueueHint@sda21(r13)
/* 801D6BE0 001D3CC0  80 0D 9C C8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801D6BE4 001D3CC4  7C 07 00 34 */	cntlzw r7, r0
/* 801D6BE8 001D3CC8  54 E0 18 38 */	slwi r0, r7, 3
/* 801D6BEC 001D3CCC  7C 9F 02 14 */	add r4, r31, r0
/* 801D6BF0 001D3CD0  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801D6BF4 001D3CD4  80 C5 02 E0 */	lwz r6, 0x2e0(r5)
/* 801D6BF8 001D3CD8  3B C5 00 00 */	addi r30, r5, 0x0
/* 801D6BFC 001D3CDC  28 06 00 00 */	cmplwi r6, 0x0
/* 801D6C00 001D3CE0  40 82 00 0C */	bne .L_801D6C0C
/* 801D6C04 001D3CE4  90 64 00 04 */	stw r3, 0x4(r4)
/* 801D6C08 001D3CE8  48 00 00 08 */	b .L_801D6C10
.L_801D6C0C:
/* 801D6C0C 001D3CEC  90 66 02 E4 */	stw r3, 0x2e4(r6)
.L_801D6C10:
/* 801D6C10 001D3CF0  90 C4 00 00 */	stw r6, 0x0(r4)
/* 801D6C14 001D3CF4  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801D6C18 001D3CF8  28 00 00 00 */	cmplwi r0, 0x0
/* 801D6C1C 001D3CFC  40 82 00 1C */	bne .L_801D6C38
/* 801D6C20 001D3D00  20 07 00 1F */	subfic r0, r7, 0x1f
/* 801D6C24 001D3D04  80 8D 9C C8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801D6C28 001D3D08  38 60 00 01 */	li r3, 0x1
/* 801D6C2C 001D3D0C  7C 60 00 30 */	slw r0, r3, r0
/* 801D6C30 001D3D10  7C 80 00 78 */	andc r0, r4, r0
/* 801D6C34 001D3D14  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
.L_801D6C38:
/* 801D6C38 001D3D18  38 00 00 00 */	li r0, 0x0
/* 801D6C3C 001D3D1C  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 801D6C40 001D3D20  38 00 00 02 */	li r0, 0x2
/* 801D6C44 001D3D24  3F E0 80 00 */	lis r31, 0x8000
/* 801D6C48 001D3D28  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801D6C4C 001D3D2C  7F C4 F3 78 */	mr r4, r30
/* 801D6C50 001D3D30  81 8D 86 60 */	lwz r12, SwitchThreadCallback@sda21(r13)
/* 801D6C54 001D3D34  80 7F 00 E4 */	lwz r3, 0xe4(r31)
/* 801D6C58 001D3D38  7D 88 03 A6 */	mtlr r12
/* 801D6C5C 001D3D3C  4E 80 00 21 */	blrl
/* 801D6C60 001D3D40  93 DF 00 E4 */	stw r30, 0xe4(r31)
/* 801D6C64 001D3D44  7F C3 F3 78 */	mr r3, r30
/* 801D6C68 001D3D48  4B FF BD 3D */	bl OSSetCurrentContext
/* 801D6C6C 001D3D4C  7F C3 F3 78 */	mr r3, r30
/* 801D6C70 001D3D50  4B FF BE 1D */	bl OSLoadContext
/* 801D6C74 001D3D54  7F C3 F3 78 */	mr r3, r30
.L_801D6C78:
/* 801D6C78 001D3D58  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D6C7C 001D3D5C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D6C80 001D3D60  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801D6C84 001D3D64  38 21 00 18 */	addi r1, r1, 0x18
/* 801D6C88 001D3D68  7C 08 03 A6 */	mtlr r0
/* 801D6C8C 001D3D6C  4E 80 00 20 */	blr
.endfn SelectThread

.fn __OSReschedule, global
/* 801D6C90 001D3D70  7C 08 02 A6 */	mflr r0
/* 801D6C94 001D3D74  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D6C98 001D3D78  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801D6C9C 001D3D7C  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D6CA0 001D3D80  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6CA4 001D3D84  41 82 00 0C */	beq .L_801D6CB0
/* 801D6CA8 001D3D88  38 60 00 00 */	li r3, 0x0
/* 801D6CAC 001D3D8C  4B FF FD BD */	bl SelectThread
.L_801D6CB0:
/* 801D6CB0 001D3D90  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801D6CB4 001D3D94  38 21 00 08 */	addi r1, r1, 0x8
/* 801D6CB8 001D3D98  7C 08 03 A6 */	mtlr r0
/* 801D6CBC 001D3D9C  4E 80 00 20 */	blr
.endfn __OSReschedule

.fn OSYieldThread, global
/* 801D6CC0 001D3DA0  7C 08 02 A6 */	mflr r0
/* 801D6CC4 001D3DA4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D6CC8 001D3DA8  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801D6CCC 001D3DAC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801D6CD0 001D3DB0  4B FF D6 41 */	bl OSDisableInterrupts
/* 801D6CD4 001D3DB4  3B E3 00 00 */	addi r31, r3, 0x0
/* 801D6CD8 001D3DB8  38 60 00 01 */	li r3, 0x1
/* 801D6CDC 001D3DBC  4B FF FD 8D */	bl SelectThread
/* 801D6CE0 001D3DC0  7F E3 FB 78 */	mr r3, r31
/* 801D6CE4 001D3DC4  4B FF D6 55 */	bl OSRestoreInterrupts
/* 801D6CE8 001D3DC8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801D6CEC 001D3DCC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801D6CF0 001D3DD0  38 21 00 10 */	addi r1, r1, 0x10
/* 801D6CF4 001D3DD4  7C 08 03 A6 */	mtlr r0
/* 801D6CF8 001D3DD8  4E 80 00 20 */	blr
.endfn OSYieldThread

.fn OSCancelThread, global
/* 801D6CFC 001D3DDC  7C 08 02 A6 */	mflr r0
/* 801D6D00 001D3DE0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D6D04 001D3DE4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801D6D08 001D3DE8  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801D6D0C 001D3DEC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801D6D10 001D3DF0  7C 7E 1B 78 */	mr r30, r3
/* 801D6D14 001D3DF4  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801D6D18 001D3DF8  4B FF D5 F9 */	bl OSDisableInterrupts
/* 801D6D1C 001D3DFC  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 801D6D20 001D3E00  3B E3 00 00 */	addi r31, r3, 0x0
/* 801D6D24 001D3E04  2C 00 00 03 */	cmpwi r0, 0x3
/* 801D6D28 001D3E08  41 82 00 DC */	beq .L_801D6E04
/* 801D6D2C 001D3E0C  40 80 00 14 */	bge .L_801D6D40
/* 801D6D30 001D3E10  2C 00 00 01 */	cmpwi r0, 0x1
/* 801D6D34 001D3E14  41 82 00 18 */	beq .L_801D6D4C
/* 801D6D38 001D3E18  40 80 00 2C */	bge .L_801D6D64
/* 801D6D3C 001D3E1C  48 00 00 C8 */	b .L_801D6E04
.L_801D6D40:
/* 801D6D40 001D3E20  2C 00 00 05 */	cmpwi r0, 0x5
/* 801D6D44 001D3E24  40 80 00 C0 */	bge .L_801D6E04
/* 801D6D48 001D3E28  48 00 00 28 */	b .L_801D6D70
.L_801D6D4C:
/* 801D6D4C 001D3E2C  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 801D6D50 001D3E30  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6D54 001D3E34  41 81 00 BC */	bgt .L_801D6E10
/* 801D6D58 001D3E38  7F C3 F3 78 */	mr r3, r30
/* 801D6D5C 001D3E3C  4B FF FA A9 */	bl UnsetRun
/* 801D6D60 001D3E40  48 00 00 B0 */	b .L_801D6E10
.L_801D6D64:
/* 801D6D64 001D3E44  38 00 00 01 */	li r0, 0x1
/* 801D6D68 001D3E48  90 0D 9C CC */	stw r0, RunQueueHint@sda21(r13)
/* 801D6D6C 001D3E4C  48 00 00 A4 */	b .L_801D6E10
.L_801D6D70:
/* 801D6D70 001D3E50  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 801D6D74 001D3E54  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 801D6D78 001D3E58  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6D7C 001D3E5C  40 82 00 10 */	bne .L_801D6D8C
/* 801D6D80 001D3E60  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 801D6D84 001D3E64  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801D6D88 001D3E68  48 00 00 08 */	b .L_801D6D90
.L_801D6D8C:
/* 801D6D8C 001D3E6C  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_801D6D90:
/* 801D6D90 001D3E70  28 05 00 00 */	cmplwi r5, 0x0
/* 801D6D94 001D3E74  40 82 00 10 */	bne .L_801D6DA4
/* 801D6D98 001D3E78  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 801D6D9C 001D3E7C  90 83 00 00 */	stw r4, 0x0(r3)
/* 801D6DA0 001D3E80  48 00 00 08 */	b .L_801D6DA8
.L_801D6DA4:
/* 801D6DA4 001D3E84  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_801D6DA8:
/* 801D6DA8 001D3E88  38 00 00 00 */	li r0, 0x0
/* 801D6DAC 001D3E8C  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 801D6DB0 001D3E90  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 801D6DB4 001D3E94  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6DB8 001D3E98  41 81 00 58 */	bgt .L_801D6E10
/* 801D6DBC 001D3E9C  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 801D6DC0 001D3EA0  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6DC4 001D3EA4  41 82 00 4C */	beq .L_801D6E10
/* 801D6DC8 001D3EA8  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_801D6DCC:
/* 801D6DCC 001D3EAC  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801D6DD0 001D3EB0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6DD4 001D3EB4  41 81 00 3C */	bgt .L_801D6E10
/* 801D6DD8 001D3EB8  7F A3 EB 78 */	mr r3, r29
/* 801D6DDC 001D3EBC  4B FF FA 91 */	bl __OSGetEffectivePriority
/* 801D6DE0 001D3EC0  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801D6DE4 001D3EC4  38 83 00 00 */	addi r4, r3, 0x0
/* 801D6DE8 001D3EC8  7C 00 20 00 */	cmpw r0, r4
/* 801D6DEC 001D3ECC  41 82 00 24 */	beq .L_801D6E10
/* 801D6DF0 001D3ED0  7F A3 EB 78 */	mr r3, r29
/* 801D6DF4 001D3ED4  4B FF FA B5 */	bl SetEffectivePriority
/* 801D6DF8 001D3ED8  7C 7D 1B 79 */	mr. r29, r3
/* 801D6DFC 001D3EDC  40 82 FF D0 */	bne .L_801D6DCC
/* 801D6E00 001D3EE0  48 00 00 10 */	b .L_801D6E10
.L_801D6E04:
/* 801D6E04 001D3EE4  7F E3 FB 78 */	mr r3, r31
/* 801D6E08 001D3EE8  4B FF D5 31 */	bl OSRestoreInterrupts
/* 801D6E0C 001D3EEC  48 00 00 90 */	b .L_801D6E9C
.L_801D6E10:
/* 801D6E10 001D3EF0  7F C3 F3 78 */	mr r3, r30
/* 801D6E14 001D3EF4  4B FF BD 59 */	bl OSClearContext
/* 801D6E18 001D3EF8  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 801D6E1C 001D3EFC  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801D6E20 001D3F00  41 82 00 48 */	beq .L_801D6E68
/* 801D6E24 001D3F04  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 801D6E28 001D3F08  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 801D6E2C 001D3F0C  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6E30 001D3F10  40 82 00 10 */	bne .L_801D6E40
/* 801D6E34 001D3F14  3C 60 80 00 */	lis r3, 0x8000
/* 801D6E38 001D3F18  90 A3 00 E0 */	stw r5, 0xe0(r3)
/* 801D6E3C 001D3F1C  48 00 00 08 */	b .L_801D6E44
.L_801D6E40:
/* 801D6E40 001D3F20  90 A4 03 00 */	stw r5, 0x300(r4)
.L_801D6E44:
/* 801D6E44 001D3F24  28 05 00 00 */	cmplwi r5, 0x0
/* 801D6E48 001D3F28  40 82 00 10 */	bne .L_801D6E58
/* 801D6E4C 001D3F2C  3C 60 80 00 */	lis r3, 0x8000
/* 801D6E50 001D3F30  90 83 00 DC */	stw r4, 0xdc(r3)
/* 801D6E54 001D3F34  48 00 00 08 */	b .L_801D6E5C
.L_801D6E58:
/* 801D6E58 001D3F38  90 85 02 FC */	stw r4, 0x2fc(r5)
.L_801D6E5C:
/* 801D6E5C 001D3F3C  38 00 00 00 */	li r0, 0x0
/* 801D6E60 001D3F40  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801D6E64 001D3F44  48 00 00 0C */	b .L_801D6E70
.L_801D6E68:
/* 801D6E68 001D3F48  38 00 00 08 */	li r0, 0x8
/* 801D6E6C 001D3F4C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
.L_801D6E70:
/* 801D6E70 001D3F50  7F C3 F3 78 */	mr r3, r30
/* 801D6E74 001D3F54  4B FF DF F9 */	bl __OSUnlockAllMutex
/* 801D6E78 001D3F58  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 801D6E7C 001D3F5C  48 00 05 21 */	bl OSWakeupThread
/* 801D6E80 001D3F60  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D6E84 001D3F64  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6E88 001D3F68  41 82 00 0C */	beq .L_801D6E94
/* 801D6E8C 001D3F6C  38 60 00 00 */	li r3, 0x0
/* 801D6E90 001D3F70  4B FF FB D9 */	bl SelectThread
.L_801D6E94:
/* 801D6E94 001D3F74  7F E3 FB 78 */	mr r3, r31
/* 801D6E98 001D3F78  4B FF D4 A1 */	bl OSRestoreInterrupts
.L_801D6E9C:
/* 801D6E9C 001D3F7C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801D6EA0 001D3F80  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801D6EA4 001D3F84  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801D6EA8 001D3F88  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801D6EAC 001D3F8C  38 21 00 20 */	addi r1, r1, 0x20
/* 801D6EB0 001D3F90  7C 08 03 A6 */	mtlr r0
/* 801D6EB4 001D3F94  4E 80 00 20 */	blr
.endfn OSCancelThread

.fn OSResumeThread, global
/* 801D6EB8 001D3F98  7C 08 02 A6 */	mflr r0
/* 801D6EBC 001D3F9C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D6EC0 001D3FA0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801D6EC4 001D3FA4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801D6EC8 001D3FA8  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801D6ECC 001D3FAC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801D6ED0 001D3FB0  7C 7D 1B 78 */	mr r29, r3
/* 801D6ED4 001D3FB4  4B FF D4 3D */	bl OSDisableInterrupts
/* 801D6ED8 001D3FB8  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 801D6EDC 001D3FBC  3B E3 00 00 */	addi r31, r3, 0x0
/* 801D6EE0 001D3FC0  38 04 FF FF */	addi r0, r4, -0x1
/* 801D6EE4 001D3FC4  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801D6EE8 001D3FC8  7C 9E 23 78 */	mr r30, r4
/* 801D6EEC 001D3FCC  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801D6EF0 001D3FD0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D6EF4 001D3FD4  40 80 00 10 */	bge .L_801D6F04
/* 801D6EF8 001D3FD8  38 00 00 00 */	li r0, 0x0
/* 801D6EFC 001D3FDC  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801D6F00 001D3FE0  48 00 02 18 */	b .L_801D7118
.L_801D6F04:
/* 801D6F04 001D3FE4  40 82 02 14 */	bne .L_801D7118
/* 801D6F08 001D3FE8  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 801D6F0C 001D3FEC  2C 00 00 04 */	cmpwi r0, 0x4
/* 801D6F10 001D3FF0  41 82 00 B8 */	beq .L_801D6FC8
/* 801D6F14 001D3FF4  40 80 01 F0 */	bge .L_801D7104
/* 801D6F18 001D3FF8  2C 00 00 01 */	cmpwi r0, 0x1
/* 801D6F1C 001D3FFC  41 82 00 08 */	beq .L_801D6F24
/* 801D6F20 001D4000  48 00 01 E4 */	b .L_801D7104
.L_801D6F24:
/* 801D6F24 001D4004  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 801D6F28 001D4008  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 801D6F2C 001D400C  48 00 00 24 */	b .L_801D6F50
.L_801D6F30:
/* 801D6F30 001D4010  80 83 00 00 */	lwz r4, 0x0(r3)
/* 801D6F34 001D4014  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6F38 001D4018  41 82 00 14 */	beq .L_801D6F4C
/* 801D6F3C 001D401C  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 801D6F40 001D4020  7C 04 00 00 */	cmpw r4, r0
/* 801D6F44 001D4024  40 80 00 08 */	bge .L_801D6F4C
/* 801D6F48 001D4028  7C 80 23 78 */	mr r0, r4
.L_801D6F4C:
/* 801D6F4C 001D402C  80 63 00 10 */	lwz r3, 0x10(r3)
.L_801D6F50:
/* 801D6F50 001D4030  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6F54 001D4034  40 82 FF DC */	bne .L_801D6F30
/* 801D6F58 001D4038  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801D6F5C 001D403C  3C 60 80 38 */	lis r3, RunQueue@ha
/* 801D6F60 001D4040  38 03 E0 D8 */	addi r0, r3, RunQueue@l
/* 801D6F64 001D4044  80 7D 02 D0 */	lwz r3, 0x2d0(r29)
/* 801D6F68 001D4048  54 63 18 38 */	slwi r3, r3, 3
/* 801D6F6C 001D404C  7C 00 1A 14 */	add r0, r0, r3
/* 801D6F70 001D4050  90 1D 02 DC */	stw r0, 0x2dc(r29)
/* 801D6F74 001D4054  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801D6F78 001D4058  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D6F7C 001D405C  28 03 00 00 */	cmplwi r3, 0x0
/* 801D6F80 001D4060  40 82 00 0C */	bne .L_801D6F8C
/* 801D6F84 001D4064  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801D6F88 001D4068  48 00 00 08 */	b .L_801D6F90
.L_801D6F8C:
/* 801D6F8C 001D406C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_801D6F90:
/* 801D6F90 001D4070  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801D6F94 001D4074  38 00 00 00 */	li r0, 0x0
/* 801D6F98 001D4078  38 60 00 01 */	li r3, 0x1
/* 801D6F9C 001D407C  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801D6FA0 001D4080  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801D6FA4 001D4084  93 A4 00 04 */	stw r29, 0x4(r4)
/* 801D6FA8 001D4088  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801D6FAC 001D408C  80 8D 9C C8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801D6FB0 001D4090  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801D6FB4 001D4094  7C 60 00 30 */	slw r0, r3, r0
/* 801D6FB8 001D4098  7C 80 03 78 */	or r0, r4, r0
/* 801D6FBC 001D409C  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
/* 801D6FC0 001D40A0  90 6D 9C CC */	stw r3, RunQueueHint@sda21(r13)
/* 801D6FC4 001D40A4  48 00 01 40 */	b .L_801D7104
.L_801D6FC8:
/* 801D6FC8 001D40A8  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 801D6FCC 001D40AC  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 801D6FD0 001D40B0  28 04 00 00 */	cmplwi r4, 0x0
/* 801D6FD4 001D40B4  40 82 00 10 */	bne .L_801D6FE4
/* 801D6FD8 001D40B8  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D6FDC 001D40BC  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801D6FE0 001D40C0  48 00 00 08 */	b .L_801D6FE8
.L_801D6FE4:
/* 801D6FE4 001D40C4  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_801D6FE8:
/* 801D6FE8 001D40C8  28 05 00 00 */	cmplwi r5, 0x0
/* 801D6FEC 001D40CC  40 82 00 10 */	bne .L_801D6FFC
/* 801D6FF0 001D40D0  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D6FF4 001D40D4  90 83 00 00 */	stw r4, 0x0(r3)
/* 801D6FF8 001D40D8  48 00 00 08 */	b .L_801D7000
.L_801D6FFC:
/* 801D6FFC 001D40DC  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_801D7000:
/* 801D7000 001D40E0  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 801D7004 001D40E4  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 801D7008 001D40E8  48 00 00 24 */	b .L_801D702C
.L_801D700C:
/* 801D700C 001D40EC  80 83 00 00 */	lwz r4, 0x0(r3)
/* 801D7010 001D40F0  28 04 00 00 */	cmplwi r4, 0x0
/* 801D7014 001D40F4  41 82 00 14 */	beq .L_801D7028
/* 801D7018 001D40F8  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 801D701C 001D40FC  7C 04 00 00 */	cmpw r4, r0
/* 801D7020 001D4100  40 80 00 08 */	bge .L_801D7028
/* 801D7024 001D4104  7C 80 23 78 */	mr r0, r4
.L_801D7028:
/* 801D7028 001D4108  80 63 00 10 */	lwz r3, 0x10(r3)
.L_801D702C:
/* 801D702C 001D410C  28 03 00 00 */	cmplwi r3, 0x0
/* 801D7030 001D4110  40 82 FF DC */	bne .L_801D700C
/* 801D7034 001D4114  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801D7038 001D4118  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801D703C 001D411C  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801D7040 001D4120  48 00 00 08 */	b .L_801D7048
.L_801D7044:
/* 801D7044 001D4124  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_801D7048:
/* 801D7048 001D4128  28 05 00 00 */	cmplwi r5, 0x0
/* 801D704C 001D412C  41 82 00 14 */	beq .L_801D7060
/* 801D7050 001D4130  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801D7054 001D4134  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801D7058 001D4138  7C 03 00 00 */	cmpw r3, r0
/* 801D705C 001D413C  40 81 FF E8 */	ble .L_801D7044
.L_801D7060:
/* 801D7060 001D4140  28 05 00 00 */	cmplwi r5, 0x0
/* 801D7064 001D4144  40 82 00 34 */	bne .L_801D7098
/* 801D7068 001D4148  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D706C 001D414C  28 03 00 00 */	cmplwi r3, 0x0
/* 801D7070 001D4150  40 82 00 0C */	bne .L_801D707C
/* 801D7074 001D4154  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801D7078 001D4158  48 00 00 08 */	b .L_801D7080
.L_801D707C:
/* 801D707C 001D415C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_801D7080:
/* 801D7080 001D4160  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801D7084 001D4164  38 00 00 00 */	li r0, 0x0
/* 801D7088 001D4168  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801D708C 001D416C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D7090 001D4170  93 A3 00 04 */	stw r29, 0x4(r3)
/* 801D7094 001D4174  48 00 00 2C */	b .L_801D70C0
.L_801D7098:
/* 801D7098 001D4178  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 801D709C 001D417C  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801D70A0 001D4180  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 801D70A4 001D4184  28 03 00 00 */	cmplwi r3, 0x0
/* 801D70A8 001D4188  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801D70AC 001D418C  40 82 00 10 */	bne .L_801D70BC
/* 801D70B0 001D4190  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D70B4 001D4194  93 A3 00 00 */	stw r29, 0x0(r3)
/* 801D70B8 001D4198  48 00 00 08 */	b .L_801D70C0
.L_801D70BC:
/* 801D70BC 001D419C  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_801D70C0:
/* 801D70C0 001D41A0  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 801D70C4 001D41A4  28 03 00 00 */	cmplwi r3, 0x0
/* 801D70C8 001D41A8  41 82 00 3C */	beq .L_801D7104
/* 801D70CC 001D41AC  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_801D70D0:
/* 801D70D0 001D41B0  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801D70D4 001D41B4  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D70D8 001D41B8  41 81 00 2C */	bgt .L_801D7104
/* 801D70DC 001D41BC  7F A3 EB 78 */	mr r3, r29
/* 801D70E0 001D41C0  4B FF F7 8D */	bl __OSGetEffectivePriority
/* 801D70E4 001D41C4  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801D70E8 001D41C8  38 83 00 00 */	addi r4, r3, 0x0
/* 801D70EC 001D41CC  7C 00 20 00 */	cmpw r0, r4
/* 801D70F0 001D41D0  41 82 00 14 */	beq .L_801D7104
/* 801D70F4 001D41D4  7F A3 EB 78 */	mr r3, r29
/* 801D70F8 001D41D8  4B FF F7 B1 */	bl SetEffectivePriority
/* 801D70FC 001D41DC  7C 7D 1B 79 */	mr. r29, r3
/* 801D7100 001D41E0  40 82 FF D0 */	bne .L_801D70D0
.L_801D7104:
/* 801D7104 001D41E4  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D7108 001D41E8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D710C 001D41EC  41 82 00 0C */	beq .L_801D7118
/* 801D7110 001D41F0  38 60 00 00 */	li r3, 0x0
/* 801D7114 001D41F4  4B FF F9 55 */	bl SelectThread
.L_801D7118:
/* 801D7118 001D41F8  7F E3 FB 78 */	mr r3, r31
/* 801D711C 001D41FC  4B FF D2 1D */	bl OSRestoreInterrupts
/* 801D7120 001D4200  7F C3 F3 78 */	mr r3, r30
/* 801D7124 001D4204  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801D7128 001D4208  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801D712C 001D420C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801D7130 001D4210  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801D7134 001D4214  38 21 00 28 */	addi r1, r1, 0x28
/* 801D7138 001D4218  7C 08 03 A6 */	mtlr r0
/* 801D713C 001D421C  4E 80 00 20 */	blr
.endfn OSResumeThread

.fn OSSuspendThread, global
/* 801D7140 001D4220  7C 08 02 A6 */	mflr r0
/* 801D7144 001D4224  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D7148 001D4228  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801D714C 001D422C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801D7150 001D4230  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801D7154 001D4234  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801D7158 001D4238  7C 7D 1B 78 */	mr r29, r3
/* 801D715C 001D423C  4B FF D1 B5 */	bl OSDisableInterrupts
/* 801D7160 001D4240  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 801D7164 001D4244  3B E3 00 00 */	addi r31, r3, 0x0
/* 801D7168 001D4248  38 04 00 01 */	addi r0, r4, 0x1
/* 801D716C 001D424C  7C 9E 23 79 */	mr. r30, r4
/* 801D7170 001D4250  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801D7174 001D4254  40 82 01 14 */	bne .L_801D7288
/* 801D7178 001D4258  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 801D717C 001D425C  2C 00 00 03 */	cmpwi r0, 0x3
/* 801D7180 001D4260  41 82 00 F4 */	beq .L_801D7274
/* 801D7184 001D4264  40 80 00 14 */	bge .L_801D7198
/* 801D7188 001D4268  2C 00 00 01 */	cmpwi r0, 0x1
/* 801D718C 001D426C  41 82 00 28 */	beq .L_801D71B4
/* 801D7190 001D4270  40 80 00 14 */	bge .L_801D71A4
/* 801D7194 001D4274  48 00 00 E0 */	b .L_801D7274
.L_801D7198:
/* 801D7198 001D4278  2C 00 00 05 */	cmpwi r0, 0x5
/* 801D719C 001D427C  40 80 00 D8 */	bge .L_801D7274
/* 801D71A0 001D4280  48 00 00 20 */	b .L_801D71C0
.L_801D71A4:
/* 801D71A4 001D4284  38 00 00 01 */	li r0, 0x1
/* 801D71A8 001D4288  90 0D 9C CC */	stw r0, RunQueueHint@sda21(r13)
/* 801D71AC 001D428C  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 801D71B0 001D4290  48 00 00 C4 */	b .L_801D7274
.L_801D71B4:
/* 801D71B4 001D4294  7F A3 EB 78 */	mr r3, r29
/* 801D71B8 001D4298  4B FF F6 4D */	bl UnsetRun
/* 801D71BC 001D429C  48 00 00 B8 */	b .L_801D7274
.L_801D71C0:
/* 801D71C0 001D42A0  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 801D71C4 001D42A4  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 801D71C8 001D42A8  28 04 00 00 */	cmplwi r4, 0x0
/* 801D71CC 001D42AC  40 82 00 10 */	bne .L_801D71DC
/* 801D71D0 001D42B0  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D71D4 001D42B4  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801D71D8 001D42B8  48 00 00 08 */	b .L_801D71E0
.L_801D71DC:
/* 801D71DC 001D42BC  90 A4 02 E4 */	stw r5, 0x2e4(r4)
.L_801D71E0:
/* 801D71E0 001D42C0  28 05 00 00 */	cmplwi r5, 0x0
/* 801D71E4 001D42C4  40 82 00 10 */	bne .L_801D71F4
/* 801D71E8 001D42C8  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D71EC 001D42CC  90 83 00 00 */	stw r4, 0x0(r3)
/* 801D71F0 001D42D0  48 00 00 08 */	b .L_801D71F8
.L_801D71F4:
/* 801D71F4 001D42D4  90 85 02 E0 */	stw r4, 0x2e0(r5)
.L_801D71F8:
/* 801D71F8 001D42D8  38 00 00 20 */	li r0, 0x20
/* 801D71FC 001D42DC  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801D7200 001D42E0  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801D7204 001D42E4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D7208 001D42E8  28 03 00 00 */	cmplwi r3, 0x0
/* 801D720C 001D42EC  40 82 00 0C */	bne .L_801D7218
/* 801D7210 001D42F0  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801D7214 001D42F4  48 00 00 08 */	b .L_801D721C
.L_801D7218:
/* 801D7218 001D42F8  93 A3 02 E0 */	stw r29, 0x2e0(r3)
.L_801D721C:
/* 801D721C 001D42FC  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801D7220 001D4300  38 00 00 00 */	li r0, 0x0
/* 801D7224 001D4304  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801D7228 001D4308  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801D722C 001D430C  93 A3 00 04 */	stw r29, 0x4(r3)
/* 801D7230 001D4310  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 801D7234 001D4314  28 03 00 00 */	cmplwi r3, 0x0
/* 801D7238 001D4318  41 82 00 3C */	beq .L_801D7274
/* 801D723C 001D431C  83 A3 00 08 */	lwz r29, 0x8(r3)
.L_801D7240:
/* 801D7240 001D4320  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801D7244 001D4324  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D7248 001D4328  41 81 00 2C */	bgt .L_801D7274
/* 801D724C 001D432C  7F A3 EB 78 */	mr r3, r29
/* 801D7250 001D4330  4B FF F6 1D */	bl __OSGetEffectivePriority
/* 801D7254 001D4334  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801D7258 001D4338  38 83 00 00 */	addi r4, r3, 0x0
/* 801D725C 001D433C  7C 00 20 00 */	cmpw r0, r4
/* 801D7260 001D4340  41 82 00 14 */	beq .L_801D7274
/* 801D7264 001D4344  7F A3 EB 78 */	mr r3, r29
/* 801D7268 001D4348  4B FF F6 41 */	bl SetEffectivePriority
/* 801D726C 001D434C  7C 7D 1B 79 */	mr. r29, r3
/* 801D7270 001D4350  40 82 FF D0 */	bne .L_801D7240
.L_801D7274:
/* 801D7274 001D4354  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D7278 001D4358  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D727C 001D435C  41 82 00 0C */	beq .L_801D7288
/* 801D7280 001D4360  38 60 00 00 */	li r3, 0x0
/* 801D7284 001D4364  4B FF F7 E5 */	bl SelectThread
.L_801D7288:
/* 801D7288 001D4368  7F E3 FB 78 */	mr r3, r31
/* 801D728C 001D436C  4B FF D0 AD */	bl OSRestoreInterrupts
/* 801D7290 001D4370  7F C3 F3 78 */	mr r3, r30
/* 801D7294 001D4374  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801D7298 001D4378  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801D729C 001D437C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801D72A0 001D4380  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801D72A4 001D4384  38 21 00 20 */	addi r1, r1, 0x20
/* 801D72A8 001D4388  7C 08 03 A6 */	mtlr r0
/* 801D72AC 001D438C  4E 80 00 20 */	blr
.endfn OSSuspendThread

.fn OSSleepThread, global
/* 801D72B0 001D4390  7C 08 02 A6 */	mflr r0
/* 801D72B4 001D4394  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D72B8 001D4398  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D72BC 001D439C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D72C0 001D43A0  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801D72C4 001D43A4  7C 7E 1B 78 */	mr r30, r3
/* 801D72C8 001D43A8  4B FF D0 49 */	bl OSDisableInterrupts
/* 801D72CC 001D43AC  3C 80 80 00 */	lis r4, 0x8000
/* 801D72D0 001D43B0  80 84 00 E4 */	lwz r4, 0xe4(r4)
/* 801D72D4 001D43B4  38 00 00 04 */	li r0, 0x4
/* 801D72D8 001D43B8  7C 7F 1B 78 */	mr r31, r3
/* 801D72DC 001D43BC  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 801D72E0 001D43C0  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 801D72E4 001D43C4  80 BE 00 00 */	lwz r5, 0x0(r30)
/* 801D72E8 001D43C8  48 00 00 08 */	b .L_801D72F0
.L_801D72EC:
/* 801D72EC 001D43CC  80 A5 02 E0 */	lwz r5, 0x2e0(r5)
.L_801D72F0:
/* 801D72F0 001D43D0  28 05 00 00 */	cmplwi r5, 0x0
/* 801D72F4 001D43D4  41 82 00 14 */	beq .L_801D7308
/* 801D72F8 001D43D8  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801D72FC 001D43DC  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 801D7300 001D43E0  7C 03 00 00 */	cmpw r3, r0
/* 801D7304 001D43E4  40 81 FF E8 */	ble .L_801D72EC
.L_801D7308:
/* 801D7308 001D43E8  28 05 00 00 */	cmplwi r5, 0x0
/* 801D730C 001D43EC  40 82 00 30 */	bne .L_801D733C
/* 801D7310 001D43F0  80 7E 00 04 */	lwz r3, 0x4(r30)
/* 801D7314 001D43F4  28 03 00 00 */	cmplwi r3, 0x0
/* 801D7318 001D43F8  40 82 00 0C */	bne .L_801D7324
/* 801D731C 001D43FC  90 9E 00 00 */	stw r4, 0x0(r30)
/* 801D7320 001D4400  48 00 00 08 */	b .L_801D7328
.L_801D7324:
/* 801D7324 001D4404  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_801D7328:
/* 801D7328 001D4408  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 801D732C 001D440C  38 00 00 00 */	li r0, 0x0
/* 801D7330 001D4410  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 801D7334 001D4414  90 9E 00 04 */	stw r4, 0x4(r30)
/* 801D7338 001D4418  48 00 00 28 */	b .L_801D7360
.L_801D733C:
/* 801D733C 001D441C  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 801D7340 001D4420  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801D7344 001D4424  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 801D7348 001D4428  28 03 00 00 */	cmplwi r3, 0x0
/* 801D734C 001D442C  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 801D7350 001D4430  40 82 00 0C */	bne .L_801D735C
/* 801D7354 001D4434  90 9E 00 00 */	stw r4, 0x0(r30)
/* 801D7358 001D4438  48 00 00 08 */	b .L_801D7360
.L_801D735C:
/* 801D735C 001D443C  90 83 02 E0 */	stw r4, 0x2e0(r3)
.L_801D7360:
/* 801D7360 001D4440  38 00 00 01 */	li r0, 0x1
/* 801D7364 001D4444  90 0D 9C CC */	stw r0, RunQueueHint@sda21(r13)
/* 801D7368 001D4448  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D736C 001D444C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D7370 001D4450  41 82 00 0C */	beq .L_801D737C
/* 801D7374 001D4454  38 60 00 00 */	li r3, 0x0
/* 801D7378 001D4458  4B FF F6 F1 */	bl SelectThread
.L_801D737C:
/* 801D737C 001D445C  7F E3 FB 78 */	mr r3, r31
/* 801D7380 001D4460  4B FF CF B9 */	bl OSRestoreInterrupts
/* 801D7384 001D4464  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D7388 001D4468  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D738C 001D446C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801D7390 001D4470  38 21 00 18 */	addi r1, r1, 0x18
/* 801D7394 001D4474  7C 08 03 A6 */	mtlr r0
/* 801D7398 001D4478  4E 80 00 20 */	blr
.endfn OSSleepThread

.fn OSWakeupThread, global
/* 801D739C 001D447C  7C 08 02 A6 */	mflr r0
/* 801D73A0 001D4480  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D73A4 001D4484  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D73A8 001D4488  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D73AC 001D448C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801D73B0 001D4490  7C 7E 1B 78 */	mr r30, r3
/* 801D73B4 001D4494  4B FF CF 5D */	bl OSDisableInterrupts
/* 801D73B8 001D4498  3C 80 80 38 */	lis r4, RunQueue@ha
/* 801D73BC 001D449C  3B E3 00 00 */	addi r31, r3, 0x0
/* 801D73C0 001D44A0  38 A4 E0 D8 */	addi r5, r4, RunQueue@l
/* 801D73C4 001D44A4  48 00 00 9C */	b .L_801D7460
.L_801D73C8:
/* 801D73C8 001D44A8  80 66 02 E0 */	lwz r3, 0x2e0(r6)
/* 801D73CC 001D44AC  28 03 00 00 */	cmplwi r3, 0x0
/* 801D73D0 001D44B0  40 82 00 10 */	bne .L_801D73E0
/* 801D73D4 001D44B4  38 00 00 00 */	li r0, 0x0
/* 801D73D8 001D44B8  90 1E 00 04 */	stw r0, 0x4(r30)
/* 801D73DC 001D44BC  48 00 00 0C */	b .L_801D73E8
.L_801D73E0:
/* 801D73E0 001D44C0  38 00 00 00 */	li r0, 0x0
/* 801D73E4 001D44C4  90 03 02 E4 */	stw r0, 0x2e4(r3)
.L_801D73E8:
/* 801D73E8 001D44C8  90 7E 00 00 */	stw r3, 0x0(r30)
/* 801D73EC 001D44CC  38 00 00 01 */	li r0, 0x1
/* 801D73F0 001D44D0  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 801D73F4 001D44D4  80 06 02 CC */	lwz r0, 0x2cc(r6)
/* 801D73F8 001D44D8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D73FC 001D44DC  41 81 00 64 */	bgt .L_801D7460
/* 801D7400 001D44E0  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801D7404 001D44E4  54 00 18 38 */	slwi r0, r0, 3
/* 801D7408 001D44E8  7C 05 02 14 */	add r0, r5, r0
/* 801D740C 001D44EC  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 801D7410 001D44F0  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 801D7414 001D44F4  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801D7418 001D44F8  28 03 00 00 */	cmplwi r3, 0x0
/* 801D741C 001D44FC  40 82 00 0C */	bne .L_801D7428
/* 801D7420 001D4500  90 C4 00 00 */	stw r6, 0x0(r4)
/* 801D7424 001D4504  48 00 00 08 */	b .L_801D742C
.L_801D7428:
/* 801D7428 001D4508  90 C3 02 E0 */	stw r6, 0x2e0(r3)
.L_801D742C:
/* 801D742C 001D450C  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 801D7430 001D4510  38 00 00 00 */	li r0, 0x0
/* 801D7434 001D4514  38 60 00 01 */	li r3, 0x1
/* 801D7438 001D4518  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 801D743C 001D451C  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 801D7440 001D4520  90 C4 00 04 */	stw r6, 0x4(r4)
/* 801D7444 001D4524  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801D7448 001D4528  80 8D 9C C8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801D744C 001D452C  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801D7450 001D4530  7C 60 00 30 */	slw r0, r3, r0
/* 801D7454 001D4534  7C 80 03 78 */	or r0, r4, r0
/* 801D7458 001D4538  90 0D 9C C8 */	stw r0, RunQueueBits@sda21(r13)
/* 801D745C 001D453C  90 6D 9C CC */	stw r3, RunQueueHint@sda21(r13)
.L_801D7460:
/* 801D7460 001D4540  80 DE 00 00 */	lwz r6, 0x0(r30)
/* 801D7464 001D4544  28 06 00 00 */	cmplwi r6, 0x0
/* 801D7468 001D4548  40 82 FF 60 */	bne .L_801D73C8
/* 801D746C 001D454C  80 0D 9C CC */	lwz r0, RunQueueHint@sda21(r13)
/* 801D7470 001D4550  2C 00 00 00 */	cmpwi r0, 0x0
/* 801D7474 001D4554  41 82 00 0C */	beq .L_801D7480
/* 801D7478 001D4558  38 60 00 00 */	li r3, 0x0
/* 801D747C 001D455C  4B FF F5 ED */	bl SelectThread
.L_801D7480:
/* 801D7480 001D4560  7F E3 FB 78 */	mr r3, r31
/* 801D7484 001D4564  4B FF CE B5 */	bl OSRestoreInterrupts
/* 801D7488 001D4568  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D748C 001D456C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D7490 001D4570  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801D7494 001D4574  38 21 00 18 */	addi r1, r1, 0x18
/* 801D7498 001D4578  7C 08 03 A6 */	mtlr r0
/* 801D749C 001D457C  4E 80 00 20 */	blr
.endfn OSWakeupThread

.fn OSClearStack, global
/* 801D74A0 001D4580  7C 08 02 A6 */	mflr r0
/* 801D74A4 001D4584  90 01 00 04 */	stw r0, 0x4(r1)
/* 801D74A8 001D4588  54 60 82 1E */	clrlslwi r0, r3, 24, 16
/* 801D74AC 001D458C  50 60 C0 0E */	rlwimi r0, r3, 24, 0, 7
/* 801D74B0 001D4590  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801D74B4 001D4594  50 60 44 2E */	rlwimi r0, r3, 8, 16, 23
/* 801D74B8 001D4598  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801D74BC 001D459C  7C 1F 03 78 */	mr r31, r0
/* 801D74C0 001D45A0  50 7F 06 3E */	rlwimi r31, r3, 0, 24, 31
/* 801D74C4 001D45A4  4B FF B6 A1 */	bl OSGetStackPointer
/* 801D74C8 001D45A8  3C 80 80 00 */	lis r4, 0x8000
/* 801D74CC 001D45AC  80 A4 00 E4 */	lwz r5, 0xe4(r4)
/* 801D74D0 001D45B0  38 83 00 03 */	addi r4, r3, 0x3
/* 801D74D4 001D45B4  80 A5 03 08 */	lwz r5, 0x308(r5)
/* 801D74D8 001D45B8  38 A5 00 04 */	addi r5, r5, 0x4
/* 801D74DC 001D45BC  7C 05 18 40 */	cmplw r5, r3
/* 801D74E0 001D45C0  7C 85 20 50 */	subf r4, r5, r4
/* 801D74E4 001D45C4  54 84 F0 BE */	srwi r4, r4, 2
/* 801D74E8 001D45C8  40 80 00 50 */	bge .L_801D7538
/* 801D74EC 001D45CC  54 80 E8 FF */	srwi. r0, r4, 3
/* 801D74F0 001D45D0  7C 09 03 A6 */	mtctr r0
/* 801D74F4 001D45D4  41 82 00 34 */	beq .L_801D7528
.L_801D74F8:
/* 801D74F8 001D45D8  93 E5 00 00 */	stw r31, 0x0(r5)
/* 801D74FC 001D45DC  93 E5 00 04 */	stw r31, 0x4(r5)
/* 801D7500 001D45E0  93 E5 00 08 */	stw r31, 0x8(r5)
/* 801D7504 001D45E4  93 E5 00 0C */	stw r31, 0xc(r5)
/* 801D7508 001D45E8  93 E5 00 10 */	stw r31, 0x10(r5)
/* 801D750C 001D45EC  93 E5 00 14 */	stw r31, 0x14(r5)
/* 801D7510 001D45F0  93 E5 00 18 */	stw r31, 0x18(r5)
/* 801D7514 001D45F4  93 E5 00 1C */	stw r31, 0x1c(r5)
/* 801D7518 001D45F8  38 A5 00 20 */	addi r5, r5, 0x20
/* 801D751C 001D45FC  42 00 FF DC */	bdnz .L_801D74F8
/* 801D7520 001D4600  70 84 00 07 */	andi. r4, r4, 0x7
/* 801D7524 001D4604  41 82 00 14 */	beq .L_801D7538
.L_801D7528:
/* 801D7528 001D4608  7C 89 03 A6 */	mtctr r4
.L_801D752C:
/* 801D752C 001D460C  93 E5 00 00 */	stw r31, 0x0(r5)
/* 801D7530 001D4610  38 A5 00 04 */	addi r5, r5, 0x4
/* 801D7534 001D4614  42 00 FF F8 */	bdnz .L_801D752C
.L_801D7538:
/* 801D7538 001D4618  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801D753C 001D461C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801D7540 001D4620  38 21 00 18 */	addi r1, r1, 0x18
/* 801D7544 001D4624  7C 08 03 A6 */	mtlr r0
/* 801D7548 001D4628  4E 80 00 20 */	blr
.endfn OSClearStack

# 0x8037E0D8 - 0x8037EAD0
.section .bss, "wa", @nobits
.balign 8

.obj RunQueue, local
.sym ...bss.0, local
	.skip 0x100
.endobj RunQueue

.obj IdleThread, local
	.skip 0x318
.endobj IdleThread

.obj DefaultThread, local
	.skip 0x318
.endobj DefaultThread

.obj IdleContext, local
	.skip 0x2C8
.endobj IdleContext

# 0x803CAF60 - 0x803CAF68
.section .sdata, "wa"
.balign 8

.obj SwitchThreadCallback, local
	.4byte DefaultSwitchThreadCallback
.endobj SwitchThreadCallback
	.4byte 0x00000000

# 0x803CC5C8 - 0x803CC5D8
.section .sbss, "wa", @nobits
.balign 8

.obj RunQueueBits, local
	.skip 0x4
.endobj RunQueueBits

.obj RunQueueHint, local
	.skip 0x4
.endobj RunQueueHint

.obj Reschedule, local
	.skip 0x4
.endobj Reschedule
	.skip 0x4
